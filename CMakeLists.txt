PROJECT(YARP)

# on windows, we have to tell ace how it was compiled
IF (WIN32 AND NOT CYGWIN)
   ADD_DEFINITIONS(-DWIN32 -D_WINDOWS)
ENDIF (WIN32 AND NOT CYGWIN)

#SET(USE_EXPERIMENTAL FALSE CACHE BOOL "Do you want to include experimental features?")
#IF (USE_EXPERIMENTAL)
#   ADD_DEFINITIONS(-DUSE_EXPERIMENTAL)
#ENDIF (USE_EXPERIMENTAL)


SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

# this doesn't happen automatically for makefiles
MAKE_DIRECTORY(${LIBRARY_OUTPUT_PATH})
MAKE_DIRECTORY(${EXECUTABLE_OUTPUT_PATH})

MARK_AS_ADVANCED(LIBRARY_OUTPUT_PATH EXECUTABLE_OUTPUT_PATH)
MARK_AS_ADVANCED(CMAKE_BACKWARDS_COMPATIBILITY)

# more msvc problems...
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/lib ${CMAKE_BINARY_DIR}/lib/Debug ${CMAKE_BINARY_DIR}/lib/Release)

# again, can't do this on windows without a lot of mess
#SET(BUILD_SHARED_LIBS ON)

SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/conf)

# set the OS_TAG variable to "linux" or "winnt"

INCLUDE(UsePkgConfig)
INCLUDE(YarpTag)
YarpTag()
FIND_PACKAGE(Ace REQUIRED)
FIND_PACKAGE(Yarp1)
INCLUDE(YarpLibrary)

INCLUDE_DIRECTORIES(${ACE_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${ACE_INCLUDE_CONFIG_DIR})

ENABLE_TESTING()
SUBDIRS(src conf)

#
# Packing stuff
#
IF(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")

  IF (WIN32 AND NOT CYGWIN)
    INCLUDE(YarpInstallRequiredSystemLibraries)
    INSTALL_FILES(/bin .dll ${ACE_LIBRARY} ${ACE_DEBUG_LIBRARY})
    # just in case it is needed and not present
    INSTALL_FILES(/bin FILES ${CMAKE_SOURCE_DIR}/conf/Microsoft.VC80.CRT.manifest)
  ENDIF (WIN32 AND NOT CYGWIN)

  SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "The Robot Library YARP")
  SET(CPACK_PACKAGE_VENDOR "YARP")
  SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README")
  SET(CPACK_PACKAGE_VERSION_MAJOR "2")
  SET(CPACK_PACKAGE_VERSION_MINOR "0")
  SET(CPACK_PACKAGE_VERSION_PATCH "2")
  SET(CPACK_PACKAGE_EXECUTABLES "yarp" "yarp")
  SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING")
  INCLUDE(CPack)

ENDIF(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")


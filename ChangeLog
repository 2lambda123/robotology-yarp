2008-02-03  Giacomo Spigler  <spiglerg@gmail.com>

	* src/modules/CUDA-nvidia: added support to the newly added BGRA pixel type.

2008-02-02  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_sig/include/yarp/sig/Image.h: added BGRA type,
	with appropriate conversions to other types.

2008-01-31  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/firewirecamera/CMakeLists.txt: add new
	method for supporting firewirecamera.

	* src/libYARP_dev/src/PopulateDrivers.cpp.in: added the
	firewirecamera device (missing, thanks Stefan Freyr Stefansson
	for pointing this out).

2008-01-30  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpModuleHooks.cmake: fix problem with circular
	dependency on some versions of cmake, and with library lists
	leaking into definitions.

2008-01-29  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/yarpdev_lib.cpp.in: allow device library initialization
	to happen multiple times - so clients don't need to know what
	has already been done implicitly (configuration dependent).

2008-01-28  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpCompileModules.cmake: change defaults in new method
	of device compilation to be as much like the old ones as 
	possible.

2008-01-25  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/PopulateDrivers.cpp.in: fixed accidental
	inhibition of older method of compiling devices.

	* conf/YarpCompileModules.cmake: fixed accidental inhibition of
	older method of compiling devices.

	* conf/YarpDevice.cmake: better defaults for skipping devices.

2008-01-24  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/Property.cpp: for Property::fromConfigFile,
	implement a search path for include directives.

2008-01-23  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/DeviceDriver.cpp: bug when respond()
	method returned false to signal failure.  This failure
	message was being treated as a connection problem, which
	it isn't.

2007-12-19  Lorenzo Natale <nat@liralab.it>
	* src/libYARP_dev/src/RemoteControlBoard.cpp:
	* src/libYARP_dev/include/ControlBoardInterfaces.h: added 
	remotization of calibration methods.

	* src/modules/FakeBot.h: added fake calibration methods for 
	testing
	* example/motorcontrol: test program for remote motorcontrol 
	devices (e.g. fakebot), useful for debugging/testing.

2007-12-11  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/urbtc/CMakeLists.txt: build update.

	* src/libYARP_dev/src/portaudio/CMakeLists.txt: build update.

2007-12-10  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/firewirecamera/CMakeLists.txt: build update.

	* src/libYARP_dev/src/opencv_grabber/CMakeLists.txt: build update.

	* src/libYARP_dev/src/serial/CMakeLists.txt: build update.

	* src/libYARP_dev/src/microphone/CMakeLists.txt: build mechanism
	update.

	* src/libYARP_dev/src/ffmpeg/CMakeLists.txt: updated device for
	new build mechanism.

2007-12-07  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/ControlBoardInterfacesImpl.inl: moved
	this file to ../include/yarp/dev, since it is needed by users
	of ControlBoardInterfacesImpl.h.  A redirecting file was left 
	at this location.

2007-12-06  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/PortCoreOutputUnit.cpp: fix double
	send for local carrier.

	* src/libYARP_OS/yarp/yarpserver.cpp: added trivial
	"yarpserver" program that works just like "yarp server"
	(but is easier for windows users to click on)

	* src/libYARP_OS/src/Contact.cpp: the isValid() check was a
	little, how should I say this, completely and utterly wrong.

2007-12-05  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_sig/src/Image.cpp (_alloc_data): implement 
	inversion of row access for bottom-left origin

2007-12-04  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_sig/include/yarp/sig/Image.h: propagate origin
	top-left or bottom-left flag, for better round-tripping with
	OpenCV.

2007-12-03  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/yarpdev/yarpview.cpp: now can do everything the GTK+ viewer
	can do, via the wxsdl module.

	* src/modules/wxsdl/WxsdlWriter.cpp: replicate all the documented
	flags of the GTK+ viewer: name, width, height, x, y, and out (port 
	for clicks)

2007-12-02  Giacomo Spigler  <spiglerg@gmail.com>
	* /modules/cuda, /modules/nvidia, /libYARP_dev/include/yarp/dev/GPUInterface.h : Added width() and height() methods to GPU objects, in order to be able to get current working space's dimensions.

2007-12-01  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_sig/include/yarp/sig/ImageFile.h: read/write
	to ImageRgba (but no A channel in ppm format).

2007-11-30  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/PortCore.cpp: fixed harmless race condition
	were port could be shut down multiple times.

	* src/libYARP_dev/include/yarp/dev/RemoteFrameGrabber.h: improve
	close method to interrupt a read in progress.

	* (many): removed the use of exceptions in port code, to
	facilitate broader porting of libYARP_OS library.  Note: it is now
	more important to check return values when reading from a
	ConnectionReader (or for those methods without a convenient return
	value, checking that ConnectionReader::isError is not set).

2007-11-27  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/FindAce.cmake: make it easier to link ACE statically
	with YARP, for building binary distributions.

2007-11-26  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/modules/wxsdl/WxsdlWriter.h: stub for alternate wxwidgets+sdl 
	image viewer.

	* src/yarpdev/yarpview.cpp: stub for a device-based version of the
	yarp viewer.

	* src/libYARP_OS/include/yarp/Protocol.h: give a helpful
	message if someone tries to connect to a YARP port and
	sends gibberish.

	* src/libYARP_OS/src/PortCore.cpp (adminBlock): made port admin
	interface more complete.

2007-11-24  Giacomo Spigler <spiglerg@gmail.com>

	* src/modules/cuda/*:
	* src/libYARP_dev/include/yarp/dev/GPUInterface.h:	
	* example/cuda: Added a new GPU device driver, using CUDA, the
	latest NVIDIA library for gpgpu. NOTE: it currently has a few
	limitations, and it can only run on the very latest NVIDIA
	GPUs. It can transform (NVIDIA GeForce 8800GTS) to bw a 320x240 
	image taking just 0.36ms!

2007-11-23  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/PortCoreInputUnit.cpp: added stub for
	generic administrative interface to ports.  Eventually, this
	should deal with reporting statistics about port operation
	and performance.

2007-11-21  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/os/NetInt32.h, conf/YarpReqLib.cmake: 
	finally made CMake responsible for figuring out appropriate integer 
	type. Older guesses now only used when not compiling with CMake.

2007-11-20  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_sig/include/yarp/sig/Image.h: implement RGB
	format with 32-bit channels.

	* src/libYARP_OS/src/PortCore.cpp: Now have callbacks for
	connections/disconnections - use Port::setReporter and
	BufferedPort:setReporter methods.

	* conf/YarpVersion.cmake: froze version 2.1.8

	* src/libYARP_OS/src/PortCore.cpp: Returned structured
	report on port status, rather than just human-readable
	message.  See Port::getReport and BufferedPort::getReport
	methods.

2007-11-19  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/os/PortReport.h: Started
	work on a better method for getting notifications of port
	status changes.

	* src/libYARP_OS/include/yarp/os/Network.h: Added simpler
	code interface for setting/getting port properties.  
	The name server was updated for this, as part of the 
	conversion to the fully bottle-compatible interface.

2007-11-05  Arjan Gijsberts  <arjan@liralab.it>

	* src/libYARP_dev/src/ffmpeg/default/yarp/FfmpegGrabber.cpp: 
	added support for Video4Linux2, using a --v4l2 flag.

2007-10-30  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* example/swig/example.tcl: figure out how DLL inclusion works
	in TCL on Windows.

2007-10-25  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/NameServer.cpp: allow list of ports
	to be prefiltered by prefix, to optimize yarpfs.

	* conf/YarpReqLib.cmake: Make MSYS compile compatible with GTK
	by setting -mms-bitfields flag.

2007-10-19  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/TcpCarrier.h: dust off TCP carrier
	variant without flow control, call it "fast_tcp".

	* src/libYARP_OS/src/Carriers.cpp: add "fast_tcp" as a known 
	carrier.

2007-10-16  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/RemoteControlBoard.cpp: Historically, this
	file has made a pointless connection from a reader port to a
	writer port.  I'm not sure why.  This is finally causing some
	troubles, so I've commented the connection out.

	* src/libYARP_OS/src/Companion.cpp: added "yarp forward"
	capability, to forward commands through an intermediary.  This is
	useful for monitoring RPC command/reply sequences.  Streaming
	messages can of course already be monitored with "yarp read".
	This is experimental rather than polished work.
	
2007-10-15 Alessandro Scalzo <alessandro@liralab.it>

	* src/libYARP_OS/src/NameServer.cpp: Added --noauto option: if
	config file is not found, name server exits.

2007-10-12  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/Port.cpp: fix for problem reported by
	Marco Randazzo, where calling Port::read(...,true) and then
	failing to eventually call Port::reply(...) causes a crash.

	* src/libYARP_OS/harness/PortTest.cpp: regression test for
	Marco Randazzo's problem.

2007-10-08 Lorenzo Natale <nat@liralab.it>
	* src/libYARP_dev/mei
	* src/libYARP_dev/meiMotionControl
	* src/libYARP_dev/picolo_grabber
	* src/libYARP_dev/cyberglove
	*                /e504
	*                /fob
	*                /joypres

	Removed as previously planned. They will be placed in separate
	repositories. Could not redistribute them for violation of copyright.
	
2007-10-08  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/yarpfs/yarpfs.cpp: directory structure basically in 
	place, and read/write operations work.

2007-10-05  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/yarpfs/yarpfs.cpp: some experimental code for mapping from
	the YARP Network to a file system (analogous to the /proc
	directory on Linux).  Pre-alpha, not included in the main YARP
	build.

2007-10-04  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/os/Network.h: add helper method
	for once off command/response actions, Network::write.

	* src/libYARP_OS/src/NameServer.cpp: start offering responses from
	the name server that are in standard (bottle) format.
	Historically, the name server has been using its own idiosyncratic
	protocols (since it was written before the rest of YARP existed).
	The low-level protocols were brought into line with standard yarp
	ports some time back, but the actual commands and responses
	continued to be defined in terms of strings rather than nested
	structures.  The new changes offer nested (bottle-compatible)
	structures as well.  To get the new responses, simply prefix
	commands with the word "bot".  This commit adds "bot list" and
	"bot query" commands with responses that are structured versions
	of the current "list" and "query" commands.

2007-09-25  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpVersion.cmake: froze YARP version 2.1.7

	* conf/YarpLibrary.cmake: insert SONAME versioning for shared
	libraries; this is provisional.  ABI stability will need some 
	planning.

	* src/libYARP_OS/include/yarp/os/BinPortable.h: automatic text
	mode convertion of compliant structures (see BinPortableTest.cpp)

	* src/libYARP_sig/include/yarp/sig/Image.h: added RGBA image
	class.

	* src/libYARP_OS/include/yarp/os/DummyConnector.h: added
	useful new class for testing Portable datatypes; patch number
	1798250 from Freyr Magnusson

	* conf/CMakeLists.txt: copy more configuration files to the
	"binary" directory, so that it becomes more independent.
	This is so users of YARP can just set the YARP_DIR directory
	and do not need to point to the full source with YARP_ROOT.
	YARP_DIR is understood automatically by CMake, wherease YARP_ROOT
	is not.

2007-09-24  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/yarpdev/yarphear.cpp: yarphear can now save audio from
	the network to a file, without also requiring access to the
	speakers (use --nodevice option)

2007-09-21  Giacomo Spigler  <spiglerg@gmail.com>

	* src/modules/nvidia/NVIDIADeviceDriver.cpp/.h: Added the capability to process 2 images at the same time. A possible application for this feature is, ie, motion detection (throught subtraction of subsequent frames)
	* src/libYARP_dev/include/yarp/dev/GPUInterface.h: same as above
	* example/nvidia/progs/: added a new example program, FP-motion.


2007-09-14  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/RemoteControlBoard.cpp: checked for case
	of no axes available.

	* src/libYARP_dev/include/yarp/dev/ControlBoardInterfaces.h: added
	an IAxisInfo interface as a standard way to get the name of an axis.

	* src/libYARP_dev/src/RemoteControlBoard.cpp: added remote route
	for IAxisInfo interface.


2007-08-14  Giacomo Spigler  <spiglerg@gmail.com>

	* src/modules/nvidia/NVIDIADeviceDriver.cpp/.h: Added the capability of 
	setting non-vector arguments in an easier way
	* src/libYARP_dev/include/yarp/dev/GPUInterface.h: same as above
	* example/nvidia/progs/: added a new example program, FP-resize.


2007-08-13  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/ShmemCarrier.h: disabled old
	shmem class, since it interferes with compiles on certain
	Fedora machines, and should not be needed anymore.

2007-08-12  Giacomo Spigler  <spiglerg@gmail.com>

	* src/modules/nvidia/NVIDIADeviceDriver.cpp/.h: these 2 files 
	needed a little fix to allow the usage of textures containing 
	float, int, .. values. Before this fix only 0-255 values where 
	accepted.
	* src/libYARP_dev/include/yarp/dev/GPUInterface.h: this file was
	modified to introduce the new feature.

2007-08-10  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/RemoteControlBoard.cpp: recent changes
	here seemed to force use of mcast for streaming data; added a
	"carrier" option so this can be overridden (mcast is sometimes
	not available)

2007-08-09  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/include/yarp/dev/GPUInterface.h: checked in
	this and a set of nvidia-related files for Giacomo Spigler,
	which gives a basic GPU interface for nvidia hardware.

2007-08-03  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/DgramTwoWayStream.cpp: a set of changes
	to better control multicast routing when multiple interfaces
	are present; standard network selection commands like:
	  yarp connect /port/1 mcast://net=10.0.0/port/2
	now do exactly what you would expect (route multicast 
	packets on the path from source port /port/1 to destination 
	port /port/2 through interfaces associated with IP addresses 
	beginning with 10.0.0.
	

2007-08-02  Alex Bernardino, Carlos Beltran  <alex@isr.ist.utl.pt>, <cbeltran@dist.unige.it> 

	* src/libYARP_dev/src/serial
	Driver for Serial communications 
	This driver creates an OS independent serial communications 
	driver for YARP. We exploit the capacity of ACE (Adaptive 
	Communications Environment) to provide serial communications. 
	
	* src\libYARP_dev\include\yarp\dev\ServerSerial.h.
	The companion network wrapper that provides a "yarpdev" server 
	for the driver.
	Invocation example:
	>> yarpdev --device serialport --comport COM4 --file serial.ini
	The server opens two ports (defaults /serial/in and /serial/out) 
	that receive and send Bottles to the clients, containing the 
	characters to send/receive to/from the serial link. To test the 
	driver, you may use a rs232 9-pin plug with pins 2 and 3 
	shortcutted (rx/tx) then send strings to the input port 
	using yarp write and attach a yarp read to the output port. 
	The sent strings should appear unchanged at the yarp read terminal 
	(except for being broken or having extra control characters from 
	the bottle format).

2007-07-26  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpVersion.cmake: froze version 2.1.6

	* src/libYARP_OS/src/NameConfig.cpp: removed "/conf" added
	automatically to directory supplied by YARP_CONF.  Users
	of the optional environment variable YARP_CONF seem to prefer 
	this.

        If YARP_CONF is set, YARP tries to read the following 
	configuration file:
          ${YARP_CONF}/yarp.conf
        rather than (as was the case previously)
          ${YARP_CONF}/conf/yarp.conf
	
	* src/libYARP_OS/src/Network.cpp: make Network::sync
	behave exactly like "yarp wait /portname" from the 
	command line

	* src/libYARP_OS/src/Companion.cpp: propagated a more
	useful return value to Network::connect

2007-07-24  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/NameConfig.cpp: basic support
	for multiple nameservers, and switching back and forth
	between them.  Use:

	   yarp namespace /foo

	To set the namespace to "/foo" (default is "/root").  Use:

	   yarp namespace

	to query the current namespace.  "Namespace" just means the
	name of a port associated with a particular yarp name server.

	For example, on a single machine you could start up two
	name servers that operate independently:
	   [terminal 1] yarp namespace /space1
	   [terminal 1] yarp server
	   [terminal 2] yarp namespace /space2
	   [terminal 2] yarp server 20000
	The 20000 in the second server is the start of the range of
	socket port numbers that server manages.  If you plan to 
	simultaneously use multiple nameservers they need to own 
	different socket port ranges.
	After the above, names are registered and queried from /space2
	until you type
	   [terminal 3] yarp namespace /space1
	at which point they switch to the first namespace.
	
2007-07-23  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/DgramTwoWayStream.cpp: added environment
	variable control of packet sizes.  Set:
	  YARP_DGRAM_SIZE
	to the maximum number of bytes you want per packet.  This
	does not affect the size of messages that yarp can send,
	just the maximum size of individual packets within that message.
	
	If you wish to control UDP and MCAST packet sizes independently,
	set either/both of:
	  YARP_UDP_SIZE
	  YARP_MCAST_SIZE
	Make sure to keep the settings for senders and receivers of
	messages synchronized with each other.

2007-07-21  Alessandro Scalzo <alessandro@liralab.it>
	* src/yarp/libYARP_OS/include/yarp/os/Run.h
	* src/yarp/libYARP_OS/src/Run.cpp
	In killing processes, tries first SIGTERM
	and then SIGKILL. On windows, terminates
	processes as usual. Help added.

2007-07-21  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/McastCarrier.h: disable recent 
	changes to mcast, problems reported in the field.

	* src/libYARP_OS/src/Companion.cpp: more information when
	"yarp where" fails, about what you can actually do to fix things.

	Also, version number from "yarp version" is now more accurate :-)

2007-07-20  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/yarp/libYARP_OS/include/yarp.McastCarrier.h,
	  src/yarp/libYARP_OS/include/yarp.DgramTwoWayStream.h,
	  src/yarp/libYARP_OS/include/yarp.DgramTwoWayStream.cpp:
	By default restrict multicast operation to specific network 
	interfaces.  A connection like:
	  yarp connect /port/1 /net=10.0.0/port/2 mcast
	will establish a multicast connection between ports
	/port/1 and /port/2, with network interfaces chosen
	to prefer IP address prefixes of 10.0.0.  
	
	* src/yarp/libYARP_OS/src/Module.cpp, 
	  src/yarp/libYARP_dev/src/Drivers.cpp:
	Added SIGTERM handler, equal to SIGINT, for modules and drivers.

2007-07-19  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/yarp/libYARP_OS/src/Property.cpp: the inevitable addition
	of "include" mechanism to configuration files.
	   [include "filename.ini"]
	includes the given file.
	   [include subname "filename.ini"]
	includes the given file within a subsection called "subname".

2007-07-16  Alessandro Scalzo <alessandro@liralab.it>
	* src/yarp/libYARP_OS/include/yarp/os/Run.h
	* src/yarp/libYARP_OS/src/Run.cpp
	New version, supports run & kill commands,
	.sh and .bat scripts, redirect stdin and 
	stdout to yarp ports. 

2007-07-06  Alessandro Scalzo <alessandro@liralab.it>
	* src/yarp/libYARP_OS/include/yarp/os/Run.h
	* src/yarp/libYARP_OS/src/Run.cpp
	New version, supports run & kill processes
	on both unix and win32. Does not support
	IO (by now).
	
2007-06-27  Jonas Ruesch  <ruesch@ifi.uzh.ch>

	* example/swig/yarp.i:
    support for ImageOf<PixelFloat> added.
    * example/swig/src/YarpImageHelper.java
    method get2DMatrix(ImageFloat img) added. 

2007-06-18  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/CmakeLists.txt, conf/YarpReqLib.cmake, src/yarp-framegrabbergui: 
	removed GtkMM dependency

2007-07-04  Lorenzo Natale <nat@liralab.it>

	* conf/CMakeLists.txt
	* conf/YARPCompileModules.txt
	* src/yarpdev/CMakeLists.txt
	External modules support. CMake was not setting dependencies
	between libraries correctly (build all failed if external libs
	were not manually compiled beforehand). Now fixed.

2007-06-05  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/LocalCarrier.h: improvements
	to local carrier shutdown procedure.

2007-06-04  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpVersion.cmake: froze version 2.1.5

	* src/libYARP_OS/src/Property.cpp: make an exception to
	the processing of backslash symbols when reading command
	line options, to make it easier for Windows people to
	pass filenames.

	* src/libYARP_OS/include/yarp/ShmemCarrier.h: don't use
	member templates, Visual Studio 6 unhappy.

2007-06-01  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/ShmemHybridStream.h: switched
	"shmem" carrier to be a name for Alessandro's new
	implementation.  To get the old carrier, use "shmem1".
	So something like "yarp write /write shmem://read" will
	connect using the new shmem implementation from today.

2007-05-29  Alessandro Scalzo <ale@liralab.it>
	* src/libYARP_OS/include/yarp/ShmemHybridStream.h, 
	src/libYARP_OS/src/ShmemHybridStream.cpp: added a new
	two way communication stream based on shared memory.
	Synchronization obtained by socket. It has the same
	interface as ShmemTwoWayStream. Now adapts the
	buffer size at runtime. Tested.

2007-05-28  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpCompileModules.cmake: modify Lorenzo's method
	for adding external modules into libYARP_dev so that it
	can also be used to compile modules completely outside
	of the YARP library (a bit like kernel modules).
	Updated "yarp cmake" cmake file to reflect these changes.

2007-05-25  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/LocalCarrier.h: new and better
	implementation of the "local" carrier.  If ports are running as
	part of the same process, and are attached to each other using the
	"local" carrier, then serialization never needs to happen --
	direct object references are passed around instead.  This works
	particularly well for BufferedPorts, since these can manage
	details such as keeping "written" objects around untouched until
	all readers have finished working with them.  This carrier should
	be considered experimental for now.

2007-05-21  Lorenzo Natale  <nat@liralab.it>

	* conf/YarpAddExternalModules: multiple devices 
	can now be listed in each device directory, 
	module name gets propagated to cmake flag variable
	to avoid clashes.

2007-05-21  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/ShmemCarrier.h, 
	src/libYARP_OS/include/src/Carriers.cpp: told YARP about
	ale's new carrier, called it "shmem2" for testing purposes.

2007-05-21  Alessandro Scalzo <ale@liralab.it>
	* src/libYARP_OS/include/yarp/ShmemHybridStream.h, 
	src/libYARP_OS/src/ShmemHybridStream.cpp: added a new
	two way communication stream based on shared memory.
	Synchronization obtained by socket. It has the same
	interface as ShmemTwoWayStream.

2007-05-17  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/PortReaderBuffer.cpp: There was a bug that
	would in some cases let a port overwrite a message currently being
	accessed by the user of the port (thanks to Jonas Ruesch for
	reporting problem).

2007-05-16  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_sig/include/yarp/sig/all.h: removed automatic
	include of IplImage.h -- clashes with opencv in some cases,
	and should be unnecessary.  Closes bug #1720180 (thanks to
	Jonas Ruesch for reporting problem).

2007-05-14  Lorenzo Natale  <nat@liralab.it>

	* src/libYARP_dev/src/firewirecamera:
	new device, video streaming from firewire bus.

2007-05-14  Lorenzo Natale  <nat@liralab.it>

	* src/libYARP_dev/src/esdMotionControl: 
	* src/libYARP_dev/src/James:
	* src/libYARP_dev/src/XSensMTx: 
	* src/libYARP_dev/src/inertiacube2:
	code removed. It is now placed in platform specific modules.

2007-05-10  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/CMakeLists.txt: use TARGET_LINK_LIBRARIES
	instead of LINK_LIBRARIES so that external dependencies
	propagate correctly to any other subprojects using the device 
	library (src/yarp-framegrabbergui seems to currently need this).

	* src/libYARP_OS/src/ThreadImpl.cpp: bugfix - join was no
	longer being called in some situations due to changes made 
	for bug #1695724. This gave a memory leak, first noticed
	in the yarp name server.
	
2007-04-23  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/harness/ModuleTest.cpp: fix for the usual mac +
	ACE header file order issue.

	* src/libYARP_OS/src/IConfig.cpp: fix for the usual mac + ACE
	header file order issue.

2007-04-12  Lorenzo Natale <nat@liralab.it>

	* src/libYARP_dev/CMakeLists.txt
	* conf/YarpAddExtModule.cmake
	* example/externalmodules
	Initial support for adding external devices to YARP.

2007-04-10  Jonas Ruesch  <ruesch@ifi.unizh.ch>

	* src/libYARP_dev/src/urbtc/linux/yarp/UrbtcControl.cpp:
        short overflow bugfix + compile warning fixes.

2007-04-06  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/ThreadImpl.cpp: Added fix for bug #1695724.

	* src/libYARP_OS/harness/ThreadTest.cpp: Added regression test
	for bug #1695724 -- Thread::isRunning() not returning correct
	values in some situations.

2007-04-03  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpVersion.cmake: freezing version 2.1.4

	* COPYING: freshen author and licensing information using
	./scripts/update-license

	* src/libYARP_OS/src/ShmemTwoWayStream.cpp: added message
	about occasional bad shared memory / hostname configuration 
	interaction problem.  If a shared memory connection fails, the
	following message is shown:
          *** Shared memory connection failed
          Shared memory connections can fail due to a network configuration 
	  problem.  There is a check to make sure shared memory connections 
	  are local, and this check relies on your hostname being configured 
	  well. Possible fixes:
	  - On linux, edit /etc/hosts to link 127.0.0.1 with your hostname
          - (you can find out your hostname with the "hostname" command)
          - On a windows laptop, make sure you have a network card attached
          For up to date information, see mailing list linked on yarp0.sf.net
	Hopefully we'll be able to solve this problem soon, but it has
	been around a long time (inherited from ACE).


2007-03-28  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* example/swig/yarp.i: applied patches from Boris Duran to
	fix up methods in ControlBoardInterfaces such as IPositionControl
	that don't get translated well due to use of pointers.
	Motor control from Matlab is now working on fakebot at least :-).

	* src/libYARP_OS/include/yarp/BottleImpl.h: applied patch from
	Tomassino Ferrauto to make copies a little bit less 
	inefficient.

	* src/libYARP_dev/src/ControlBoardInterfacesImpl.inl: propagated 
	return values for a bunch of methods.

2007-03-27  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpReqLib.cmake: turned "-Wall" on by default for
	UNIX, rather than just when YARP_ADMIN is set.

2007-03-27  Lorenzo Natale  <nat@liralab.it>

	* src/libYARP_OS/src/Thread.cpp: fixed bug, onStop()
	was not called properly.

2007-03-27  Lorenzo Natale  <nat@liralab.it>

	* src/libYARP_sig/Matrix.h, Vector.h:
	Modified Vector and Matrix classes to include internal
	compatibility with the GSL library. Vector class no
	longer derives from VectorOf<double>.
	Separated read/write methods in Vector class; methods should
	now allow sending/receiving data across different architectures.
	Changed regression tests accordingly.

2007-03-27  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/urbtc: added driver from Jonas Ruesch for
	iMCs01 controlboard (see http://www.ixs.co.jp/en).

2007-03-26  Lorenzo Natale  <nat@liralab.it>

	* src/libYARP_sig/src/Matrix.cpp, Vector.cpp:
	removed ACE_String_Base::append() which does not
	compile on ace 5.4. Now using operator +=.

2007-03-26  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/FindGSL.cmake: added minimal linux functionality, 
	corrected some (probably copy/paste?) references to OpenCV.

2007-03-23  Lorenzo Natale  <nat@liralab.it>

	* src/libYARP_sig: moved Rand.h, Rand.cpp to libYARP_math. 
	Moved all Vector/Matrix related functions that were previously 
	in libYARP_sig to libYARP_math.

2007-03-22  Lorenzo Natale  <nat@liralab.it>

	* src/libYARP_math: added directory structure and some initial
	files for for libYARP_math. Changed cmake files accordingly..
	For now the default is that CMake does not include the library 
	in the main project.

2007-03-21  Lorenzo Natale  <nat@liralab.it>

	* src/libYARP_sig/src/Rand.cpp: random generation (scalar and 
	vectors)

2007-03-20  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/RemoteControlBoard.cpp: (and a lot of other
	files) - cleaned up doxygen tags

	* src/doc: move dispersed doxygen files here, and rationalize
	their names.

	* src/libYARP_OS/src/Module.cpp: show configuration parameters
	when started up from console.

2007-03-19  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_sig/src/Vector.cpp: Lorenzo fixed a bug,
	the size() method was not working consistently.

2007-03-16  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/DgramTwoWayStream.cpp: crc mistreated
	in 64-bit linux.  Follow-up on sourceforge bug 1682155.

	* src/libYARP_sig/src/IplImage.cpp: applied 
	fix for compile error in 64-bit linux [sourceforge bug 1682155].
	Bug report and fix provided by Marco Barbosa.

2007-03-12  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/Network.cpp: added constructors and destructors.
	On Windows, there was a potental problem when Ports are created 
	in the main() method, and destroyed after the call to Network::fini()
	without first closing the ports.  The symptom is Yarp scanning for 
	a connection to the name server on shutdown.
	This problem can be avoided by creating ports in a sub-method
	or sub-scope.
	Another possible way to avoid this problem is to replace calls
	to Network::init and Network::fini with an object declaration:
	    Network yarp;
        Make sure this object is declared before any ports.  That way
	it should go out of scope after them.  It calls Network::init
	in its constructor and Network::fini in its destructor.
	This scoping behavior may or may not be guaranteed, I haven't 
	checked that yet.

	* src/libYARP_OS: added IConfig and Module classes; these are
	experimental generalizations of devices.  They are incomplete
	and may be withdrawn or modified - use with caution.

2007-03-08 Lorenzo Natale  <nat@liralab.it>

	* example/gsl_example: contains examples of how to use GSL with
	yarp Matrix and Vector classes.
        
	* example/matrix: contains examples of how to use Matrix and
	Vector classes.

2007-03-07 Lorenzo Natale  <nat@liralab.it>

	* conf/FindGSL.cmake: added for finding GSL library, the
	GNU Scientific Library

2007-03-07 Lorenzo Natale <nat@liralab.it>

	* src/libYARPsig: added Matrix and Vector classes
	
2007-03-06  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/FindGtkPlus.cmake: Make sure pkg-config is loaded on
	linux if available.

2007-02-28  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/NameServer.cpp: Name server port now 
	produces output when ports are registered/unregistered, you
	can do "yarp read ... /root" to eavesdrop.

2007-02-27  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* example/tutorial: This example is a simple simulation of a 
	pan/tilt robot head, with simulated vision, and motor control.

2007-02-22  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/yarp-imageviewer/gCamView.cpp: Reduce verbosity of 
	yarpview program; now it prints messages to the console
	only when things go wrong, now when they are going right.

2007-02-17  Alexandre Bernardino  <alex@isr.ist.utl.pt>

	* conf/FindAce.cmake: Added specific rules for linking with MinGW:
	-lwinmm -lwsock32

2007-02-16  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/Terminator.cpp: registered terminator
	sockets in a way that distinguishes them from ports.

	* src/doc/cmd_*.dox: freshened the documentation of the basic
	yarp programs (yarp, yarpdev, yarpview).

2007-02-15  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/NameServer.h: add a new "yarp name
	gc" command.  This does garbage collection for port names.  Every
	port for which "yarp exists /portname" returns false gets removed.
	This will clean up port information registered by processes which
	were interrupted without unregistering those ports.

2007-02-14  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* example/port_power, src/doc/port_expert.dox: extend
	tutorial material

	* src/libYARP_OS/include/yarp/Companion.h: added a new
	"yarp wait /portname" command.  Replicates the functionality
	Assif Mirza has been implementing with a bash script.  This
	command waits until "yarp exists /portname" is true.  It is
	currently implemented using polling.

2007-02-13  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* example/swig/CMakeLists.txt: Conditional for MINGW added
	for Java, based on feedback from Nelson Goncalves.  Not sure
	if it works, but should do no harm and it alerts the user to 
	the issue: passing "--add-stdcall-alias" to the linker.

2007-02-13  Giorgio Metta  <pasa@liralab.it>

	* example/gtkmm: example glade application "hello world"-like
	completed and CMakeLists files updated for Windows/Linux.

2007-02-12  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/include/yarp/dev/DeviceGroup.h: new device
	called "group" that lets you start a list of devices as a group.
	There may be cross-references between the devices.  See
	src/libYARP_dev/harness/group_basic.ini for a (fairly trivial)
	example.

	* conf/FindGtkMM.cmake: added basic unix support (via pkgconfig)

2007-02-09  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* example/swig/yarp.i: wrong header file order.

	* src/libYARP_OS/include/yarp/os/Bottle.h: give public
	access to binary form of bottles.

	* src/libYARP_dev/include/yarp/dev/PolyDriver.h: add
	reference-counting to PolyDrivers.

	* src/libYARP_dev/CMakeLists.txt: add unit testing
	to libYARP_dev - now that fake devices are available, 
	at least partial automated testing should be easier.

2007-02-08  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/doc/port_expert.dox: started documenting some of the 
	deeper port stuff.

	* CMakeLists.txt: added simple (unix-only) "dox" target for
	doxygen documentation.

2007-02-07  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/PortCoreInputUnit.cpp,PortCoreOutputUnit.cpp:
	Francesco Nori reported a problem that was caused by the 
	change on 2007-01-26 that adds information about whether replies
	are expected to a message.  In some configurations this change
	was not compatible with communicating with older YARP processes.
	Should be fixed now.

2007-02-06  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* configure.ac: added core libYARP_dev library to autoconf build,
	along with the yarpdev program.

2007-02-06 Lorenzo Natale <nat@liralab.it>

	* src/libYARP_dev/src/dragonfly/winnt/yarp/DragonflyDeviceDriver.cpp:
	corrected erratic behavior on setGain/setShutter/setBrightness and
	corresponding getters.
	
	* src/libYARP_dev/include/yarp/dev/FrameGrabberInterfaces.h: 
	added getWhiteBalanceMethod to IFrameGrabberControl and changes
	propagated to the following files -	
	- src/libYARP_dev/include/yarp/dev/ServerFrameGrabber.h
	- src/libYARP_dev/include/yarp/dev/RemoteFrameGrabber.h
	- src/libYARP_dev/src/dragonfly/winnt/yarp/DragonflyDeviceDriver.cpp
	- src/libYARP_dev/src/dragonfly/common/yarp/DragonflyDeviceDriver.h

2007-02-03  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/Makefile.am: ran
	./scripts/update-automake to freshen files needed for
	the "autoconf/automake" method of compiling YARP.  
	This still just builds the libYARP_OS and libYARP_sig
	libraries.

2007-02-02  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/os/end_pack_for_net.h: add support
	for Intel Mac OS/X.  This file needs to be cleaned up a bit.

	* src/libYARP_OS/src/Companion.cpp: Assif spotted that when a port
	is registered but does not exist yet, yarp ping does not return a
	failure.  Thanks Assif!

2007-01-31  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/ffmpeg: Option to synchronize on image
	rather than audio channel for FfmegGrabber device.  This is
	useful to preserve the exact number of images in an input
	movie.

2007-01-30  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* QUICKSTART-WIN-VS6.TXT, QUICKSTART-DEBIAN: Added windows
	installation notes from Claudio Castellini (thanks!), and sketched
	debian installation procedure.

	* src/libYARP_OS/include/yarp/os/PortReaderBuffer.h: Corrected
	some goofs affecting Windows builds.

2007-01-27  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/RemoteControlBoard.cpp: Reduced port count
	from 3 to 1.  For now, "--single_port" option needs to be set
	during creation of the device in order to use this new interface.
	Don't want to surprise anyone too much.

	* src/libYARP_dev/include/yarp/os/PortReaderBuffer.h: Put in
	a bypass for messages requiring replies (these cannot be logically
	be buffered in any useful way).

2007-01-26  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/HttpCarrier.h: Sketch how
	http interface can expose human-readable queries as forms.

	* src/libYARP_dev/src/RemoteControlBoard.cpp: began
	changes in order to better allow controlboards to be
	queried in human-readable form.

	* src/libYARP_dev/include/yarp/dev/DeviceDriver.h: began
	support for human-readable device usage queries.

	* src/libYARP_OS/src/PortCoreInputUnit.cpp: added
	suppressed-reply operation, so that if a connection to an
	RPC port does not actually care about a reply, that reply
	is not sent.

2007-01-25  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/RemoteControlBoard.cpp: make sure
	velocity interface can be used independently of position
	interface.

2007-01-19  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/HttpCarrier.cpp: support for "post" form
	of http messages.

2007-01-17  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/BottleImpl.cpp,PortCoreInputUnit.cpp: try to
	deal with newest ACE not using -1 anymore for string methods.
	(Motivation: running YARP on MAC OSX on intel processors requires
	recent ACE beta).

2007-01-16  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/FallbackNameClient.cpp,Companion.cpp:
	called name server entry "/root" instead of "root" now that
	it is a real port.

2007-01-12  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/PortCoreInputUnit.cpp: Made connections
	reversible, so that an input connection can switch to 
	become an output connection.  This is helpful for communication
	with non-YARP processes, where a connection to read data is
	initiated externally.

	* README: Updated compile/install instructions.

2007-01-11  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/HttpCarrier.h: Made basic port 
	properties visible to http connections (e.g. from web browser)

	* src/libYARP_OS/include/yarp/NameserCarrier.h: Made name server
	protocol a protocol supported at the port level.

	* src/libYARP_OS/src/NameServer.cpp: Modified name server slightly
	so that it uses a real port.  All port-level protocols and tools
	can now be used to communicate with it.  In particular
	"yarp rpc /root" works.

2007-01-11  Alexandre Bernardino  <alex@isr.ist.utl.pt>

	* src/libYARP_dev/src/dragonfly/common/yarp/DragonflyDeviceDriver.h: 
	Added a new option (--flea) to provide support for pointgray FLEA
	cameras.
	
	* src/libYARP_dev/src/dragonfly/winnt/yarp/DragonflyDeviceDriver.cpp: 
	1. Removed the hardcoded parameter initialization. 
	2. Added FLEA camera's support through a more general color 
	reconstruction method.
	
	* src/libYARP_dev/src/dragonfly/winnt/yarp/COPYRIGHT: 
	Original copyright for the Bayer2RGB color reconstruction method 
	from OpenCV.


2007-01-10  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/Companion.cpp: Added "ping" and "exists"
	subcommands, to facilitate gathering information about the
	existence and properties of a port.

2007-01-09  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/ffmpeg: Added --nodelay flag if realtime
	playback of movies is not required; also --loop and --noloop
	options.

2007-01-08  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/PortCoreInputUnit.cpp: Allowed ports to
	pass on interrupt signal.

	* src/libYARP_dev/src/opencv_grabber: Made driver pay attention 
	to width, height.

	* src/libYARP_OS/src/ffmpeg: Added FfmpegWriter as basic
	interface to ffmpeg's media writing capability.

2007-01-05  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/include/yarp/os/Contactable.h: Exposed input
	and output connection counts for Ports and BufferedPorts.

	* example/external/nameclient.cpp: Added an example of accessing
	the yarp name client using UNIX-style native tcp socket 
	interface, rather than ACE+YARP.  This was in response to
	questions from someone evaluating YARP.

	* src/libYARP_dev/src/opencv_grabber: Added --loop option for
	opencv_grabber, per Alex Bernardino's suggestion.

2006-12-15  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/ThreadImpl.cpp: fixed behavior of threads
	that shut down immediately.

	* src/libYARP_OS/src/BottleImpl.cpp: sundry small improvements.


2006-12-12  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_OS/src/BottleImpl.cpp: fixed some gaps in 
	text-mode quoting for bottles

	* src/libYARP_OS/src/Vector.cpp: fixed constructor bug #1601862

2006-12-07  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* example/swig: Lots of small improvements - hopefully I 
	didn't break anything

2006-12-06  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/CMakeLists.txt: device library is now
	compiled by default - but specific devices are not built
	in unless specifically asked for.  From a user's perspective,
	not much has changed, but now downstream users can rely
	on libYARP_dev and yarpdev existing.

2006-12-01  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* example/swig/yarp.i: updated to remove a new function clash

	* example/swig/FindJNI.cmake: updated by Assif to work on
	Ubuntu.

	* conf/FindPortAudio.cmake: contribution from Hatice to get 
	portaudio driver working under Windows

2006-11-30  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/dimax_u2c: driver contributed by 
	Assif Mirza

	* example/dev/fake_motor.cpp,simple_motor_client.cpp: examples
	to help with developing new motor control devices
	* src/libYARP_OS/src/Companion.cpp: added some more troubleshooting
	information to "yarp check"

2006-11-27  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Several OSX fixes added -- the usual small problems related to
	ace header file order
	
	* src/libYARP_OS/include/yarp/os/NetInt32.h: added operator++ and
	operator-- to big-endian implementation of NetInt32 (for OSX PPC).
	
	* automake Makefile.am files updated using scripts/update-automake.  
	This fixed bug #1601656.
	
	* src/libYARP_OS/src/Terminator.cpp: added unregister for
	fake "quit" port, fixing bug #1595763.
	
	* conf/YarpDevice.cmake, conf/yarpdev.cpp.in, 
	conf/yarpdev_helper.cpp.in: began to develop better support for
	device compilation outside of libYARP_dev.
	
2006-11-17  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* conf/YarpVersion.cmake: bumped version up to 2.1.2

	* src/libYARP_OS/include/yarp/ShmemTwoWayStream.h: removed
	some YARP1 cruft and increased the default buffer size.

2006-11-16  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/src/jrkerr: IST checked in a windows Jrkerr
	motion controller.

2006-11-14  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* experimental support for single-threaded yarpdev

2006-11-08  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* src/libYARP_dev/CMakeLists.txt: fix from Assif for wrong
	GLOB.
	* src/libYARP_dev/include/yarp/dev/UserDoc.dox: inserted
	some important missing info into the howto.
	
2006-11-06  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Device documentation procedure cleaned up a lot

	* Bumped version up to 2.1.1

2006-11-05  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Configuration parsing now expands environment variables.

	* Devices are now automatically probed to generate documentation.

	* Device documentation improved.

	* Manual cleaned up.

2006-10-28  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Integrated some video4linux stuff from Jonas Ruesch (thanks!).

	* Implemented "envelope" information that could be passed
	along from port to port, such as timestamps.

2006-10-25  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Bumped version up to 2.1.0

	* Consistent GPL licensing, copyright statements

2006-10-24  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* License comments updated, removed older references to AFL

2006-10-23  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* YARPConfig.cmake fixed so that windows paths with 
	spaces are OK.  Fixes bug 1582945.

2006-10-07  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Bugfix - PortReaderBuffer was not always returning 
	messages in the right order, oops!

2006-09-14  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Integrated with ffmpeg for reading audio/visual material

	* Bugfix for sound network format

	* C# swig interface tested (added to Java, Perl, Python, ...)

2006-09-01  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Fixed bug where non-buffered Port closed with data pending 
	would wait for that to get read

	* Fixed ports so you can open and close them repeatedly

	* Made some Solaris fixes - YARP works there now!

	* Integrated opencv_grabber

	* Added in some docs developed for summer school

2006-08-24  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Bumped version up to 2.0.7

	* Started portaudio device wrapper -- seems a good library
	for doing cross-platform audio

2006-07-28  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Fixed some problems picked up at summer school.
	Including: representation of doubles on Mac OSX
	(thanks Anthony Truchet!); buffering default for
	BufferedPort set to lossy (thanks to lots of people);
	no longer permit multiple connections between
	a single source-target port pair; set orientation
	in IPL structure associated with images.

2006-07-14  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Fixed some problems that valgrind picked up.  The
	biggest was a mismatched constructor/destructor for an
	class derived from ACE in PortCorePacket.h.

2006-07-06  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Finally dealt with silly CR/LF issues so that telnet
	access to yarp ports and the name server is less painful
	on Windows.

2006-07-03  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Large documentation updates; library brought into
	alignment with network type specifications.

2006-06-14  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Starting to add remote devices, primitive so far.

2006-06-08  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Making Bottle a better behaved recursive data structure (an
	s-expression in disguise).

2006-06-06  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Added Port::setReaderCreator so users can have persistent
	readers for each port input.

2006-06-02  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Added missing Thread::isRunning method.

2006-05-31  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Changed dgram/mcast behavior for overflowing packets.

2006-05-29  Paul Fitzpatrick  <paulfitz@alum.mit.edu>

	* Started ChangeLog.

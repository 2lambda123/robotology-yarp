/* Copyright (c) 2012  iCub Facility, Istituto Italiano di Tecnologia
 *   @author Daniele E. Domenichelli <daniele.domenichelli@iit.it>
 *
 * This file is part of gtkdataboxmm.
 *
 * gtkdataboxmm is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 2.1 of the License,
 * or (at your option) any later version.
 *
 * gtkdataboxmm is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

_DEFS(gtkdataboxmm,gtkdatabox)
_CONFIGINCLUDE(gtkdataboxmmconfig.h)
_PINCLUDE(glibmm/private/object_p.h)

#include <glibmm/object.h>

namespace Gdk { class Color; }
namespace Gdk { class Gc; }

namespace GDatabox
{

class Graph : public Glib::Object
{
    _CLASS_GOBJECT(Graph, GtkDataboxGraph, GTK_DATABOX_GRAPH, Glib::Object, GObject)

protected:
    _CTOR_DEFAULT

public:
// GdkGC* gtk_databox_graph_get_gc (GtkDataboxGraph * graph);
//    _WRAP_METHOD(Gdk::GC* get_gc() const, gtk_databox_graph_get_gc)
//    _WRAP_METHOD(const Gdk::GC* get_gc() const, gtk_databox_graph_get_gc, constversion)
// void gtk_databox_graph_set_gc (GtkDataboxGraph * graph, GdkGC *gc);
//    _WRAP_METHOD(void set_gc(Gdk::GC &gc) gtk_databox_graph_set_gc)

// void gtk_databox_graph_set_hide (GtkDataboxGraph * graph, gboolean hide);
    _WRAP_METHOD(void set_hide(bool hide), gtk_databox_graph_set_hide)
// gboolean gtk_databox_graph_get_hide (GtkDataboxGraph * graph);
    _WRAP_METHOD(bool get_hide(), gtk_databox_graph_get_hide)

// void gtk_databox_graph_set_color (GtkDataboxGraph * graph, GdkColor * color);
    _WRAP_METHOD(void set_color(const Gdk::Color &color) const, gtk_databox_graph_set_color)
// GdkColor *gtk_databox_graph_get_color (GtkDataboxGraph * graph);
//    _WRAP_METHOD(Gdk::Color get_color() const, gtk_databox_graph_get_color)

    _WRAP_METHOD(void set_size(int size), gtk_databox_graph_set_size)
    _WRAP_METHOD(int get_size() const, gtk_databox_graph_get_size)

    _WRAP_METHOD(int calculate_extrema(float &min_x, float &max_x, float &min_y, float &max_y), gtk_databox_graph_calculate_extrema)

    _WRAP_PROPERTY("color", Gdk::Color)
    _WRAP_PROPERTY("size", int)
    _WRAP_PROPERTY("hide", bool)

/* This function is called by GtkDatabox */
// void gtk_databox_graph_draw (GtkDataboxGraph * graph, GtkDatabox * box);
    _IGNORE(gtk_databox_graph_draw)

/* This function is called by derived graph classes */
//GdkGC* gtk_databox_graph_create_gc (GtkDataboxGraph * graph, GtkDatabox * box);
    _IGNORE(gtk_databox_graph_create_gc)
};

} // namespace GDatabox

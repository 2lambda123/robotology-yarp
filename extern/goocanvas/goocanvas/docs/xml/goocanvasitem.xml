<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="goocanvas-goocanvasitem">
<refmeta>
<refentrytitle role="top_of_page">GooCanvasItem</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOOCANVAS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GooCanvasItem</refname>
<refpurpose>the interface for canvas items.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="GooCanvasItem"/>
<synopsis>



                    <link linkend="GooCanvasItem-struct">GooCanvasItem</link>;
                    <link linkend="GooCanvasItemIface">GooCanvasItemIface</link>;

<link linkend="void">void</link>                <link linkend="goo-canvas-item-translate">goo_canvas_item_translate</link>           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> tx,
                                                         <link linkend="gdouble">gdouble</link> ty);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-scale">goo_canvas_item_scale</link>               (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> sx,
                                                         <link linkend="gdouble">gdouble</link> sy);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-rotate">goo_canvas_item_rotate</link>              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> degrees,
                                                         <link linkend="gdouble">gdouble</link> cx,
                                                         <link linkend="gdouble">gdouble</link> cy);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-skew-x">goo_canvas_item_skew_x</link>              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> degrees,
                                                         <link linkend="gdouble">gdouble</link> cx,
                                                         <link linkend="gdouble">gdouble</link> cy);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-skew-y">goo_canvas_item_skew_y</link>              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> degrees,
                                                         <link linkend="gdouble">gdouble</link> cx,
                                                         <link linkend="gdouble">gdouble</link> cy);
<link linkend="gboolean">gboolean</link>            <link linkend="goo-canvas-item-get-transform">goo_canvas_item_get_transform</link>       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-matrix-t">cairo_matrix_t</link> *transform);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-transform">goo_canvas_item_set_transform</link>       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         const <link linkend="cairo-matrix-t">cairo_matrix_t</link> *transform);
<link linkend="gboolean">gboolean</link>            <link linkend="goo-canvas-item-get-simple-transform">goo_canvas_item_get_simple_transform</link>
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y,
                                                         <link linkend="gdouble">gdouble</link> *scale,
                                                         <link linkend="gdouble">gdouble</link> *rotation);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-simple-transform">goo_canvas_item_set_simple_transform</link>
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="gdouble">gdouble</link> scale,
                                                         <link linkend="gdouble">gdouble</link> rotation);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-get-bounds">goo_canvas_item_get_bounds</link>          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds);
<link linkend="gboolean">gboolean</link>            <link linkend="goo-canvas-item-is-visible">goo_canvas_item_is_visible</link>          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="gboolean">gboolean</link>            <link linkend="goo-canvas-item-get-is-static">goo_canvas_item_get_is_static</link>       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-is-static">goo_canvas_item_set_is_static</link>       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gboolean">gboolean</link> is_static);

<link linkend="void">void</link>                <link linkend="goo-canvas-item-animate">goo_canvas_item_animate</link>             (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="gdouble">gdouble</link> scale,
                                                         <link linkend="gdouble">gdouble</link> degrees,
                                                         <link linkend="gboolean">gboolean</link> absolute,
                                                         <link linkend="gint">gint</link> duration,
                                                         <link linkend="gint">gint</link> step_time,
                                                         <link linkend="GooCanvasAnimateType">GooCanvasAnimateType</link> type);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-stop-animation">goo_canvas_item_stop_animation</link>      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);

<link linkend="void">void</link>                <link linkend="goo-canvas-item-raise">goo_canvas_item_raise</link>               (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *above);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-lower">goo_canvas_item_lower</link>               (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *below);

<link linkend="void">void</link>                <link linkend="goo-canvas-item-remove">goo_canvas_item_remove</link>              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);

<link linkend="GooCanvas">GooCanvas</link>*          <link linkend="goo-canvas-item-get-canvas">goo_canvas_item_get_canvas</link>          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-canvas">goo_canvas_item_set_canvas</link>          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvas">GooCanvas</link> *canvas);

<link linkend="GooCanvasItem">GooCanvasItem</link>*      <link linkend="goo-canvas-item-get-parent">goo_canvas_item_get_parent</link>          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-parent">goo_canvas_item_set_parent</link>          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *parent);

<link linkend="GooCanvasItemModel">GooCanvasItemModel</link>* <link linkend="goo-canvas-item-get-model">goo_canvas_item_get_model</link>           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-model">goo_canvas_item_set_model</link>           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);

<link linkend="gboolean">gboolean</link>            <link linkend="goo-canvas-item-is-container">goo_canvas_item_is_container</link>        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="gint">gint</link>                <link linkend="goo-canvas-item-get-n-children">goo_canvas_item_get_n_children</link>      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="GooCanvasItem">GooCanvasItem</link>*      <link linkend="goo-canvas-item-get-child">goo_canvas_item_get_child</link>           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gint">gint</link> child_num);
<link linkend="gint">gint</link>                <link linkend="goo-canvas-item-find-child">goo_canvas_item_find_child</link>          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-add-child">goo_canvas_item_add_child</link>           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         <link linkend="gint">gint</link> position);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-move-child">goo_canvas_item_move_child</link>          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gint">gint</link> old_position,
                                                         <link linkend="gint">gint</link> new_position);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-remove-child">goo_canvas_item_remove_child</link>        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gint">gint</link> child_num);
<link linkend="gboolean">gboolean</link>            <link linkend="goo-canvas-item-get-transform-for-child">goo_canvas_item_get_transform_for_child</link>
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         <link linkend="cairo-matrix-t">cairo_matrix_t</link> *transform);

<link linkend="GooCanvasStyle">GooCanvasStyle</link>*     <link linkend="goo-canvas-item-get-style">goo_canvas_item_get_style</link>           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-style">goo_canvas_item_set_style</link>           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasStyle">GooCanvasStyle</link> *style);

<link linkend="void">void</link>                <link linkend="goo-canvas-item-request-update">goo_canvas_item_request_update</link>      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-ensure-updated">goo_canvas_item_ensure_updated</link>      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-update">goo_canvas_item_update</link>              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gboolean">gboolean</link> entire_tree,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds);
<link linkend="gboolean">gboolean</link>            <link linkend="goo-canvas-item-get-requested-area">goo_canvas_item_get_requested_area</link>  (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="GooCanvasBounds">GooCanvasBounds</link> *requested_area);
<link linkend="gdouble">gdouble</link>             <link linkend="goo-canvas-item-get-requested-height">goo_canvas_item_get_requested_height</link>
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gdouble">gdouble</link> width);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-allocate-area">goo_canvas_item_allocate_area</link>       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *requested_area,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *allocated_area,
                                                         <link linkend="gdouble">gdouble</link> x_offset,
                                                         <link linkend="gdouble">gdouble</link> y_offset);
<link linkend="GList">GList</link>*              <link linkend="goo-canvas-item-get-items-at">goo_canvas_item_get_items_at</link>        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gboolean">gboolean</link> is_pointer_event,
                                                         <link linkend="gboolean">gboolean</link> parent_is_visible,
                                                         <link linkend="GList">GList</link> *found_items);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-paint">goo_canvas_item_paint</link>               (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds,
                                                         <link linkend="gdouble">gdouble</link> scale);

<link linkend="void">void</link>                <link linkend="goo-canvas-item-class-install-child-property">goo_canvas_item_class_install_child_property</link>
                                                        (<link linkend="GObjectClass">GObjectClass</link> *iclass,
                                                         <link linkend="guint">guint</link> property_id,
                                                         <link linkend="GParamSpec">GParamSpec</link> *pspec);
<link linkend="GParamSpec">GParamSpec</link>**        <link linkend="goo-canvas-item-class-list-child-properties">goo_canvas_item_class_list_child_properties</link>
                                                        (<link linkend="GObjectClass">GObjectClass</link> *iclass,
                                                         <link linkend="guint">guint</link> *n_properties);
<link linkend="GParamSpec">GParamSpec</link>*         <link linkend="goo-canvas-item-class-find-child-property">goo_canvas_item_class_find_child_property</link>
                                                        (<link linkend="GObjectClass">GObjectClass</link> *iclass,
                                                         const <link linkend="gchar">gchar</link> *property_name);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-get-child-property">goo_canvas_item_get_child_property</link>  (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         const <link linkend="gchar">gchar</link> *property_name,
                                                         <link linkend="GValue">GValue</link> *value);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-child-property">goo_canvas_item_set_child_property</link>  (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         const <link linkend="gchar">gchar</link> *property_name,
                                                         const <link linkend="GValue">GValue</link> *value);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-get-child-properties">goo_canvas_item_get_child_properties</link>
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         ...);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-get-child-properties-valist">goo_canvas_item_get_child_properties_valist</link>
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         <link linkend="va-list">va_list</link> var_args);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-child-properties">goo_canvas_item_set_child_properties</link>
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         ...);
<link linkend="void">void</link>                <link linkend="goo-canvas-item-set-child-properties-valist">goo_canvas_item_set_child_properties_valist</link>
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         <link linkend="va-list">va_list</link> var_args);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GInterface">GInterface</link>
   +----GooCanvasItem
</synopsis>

</refsect1>

<refsect1 role="prerequisites">
<title role="prerequisites.title">Prerequisites</title>
<para>
GooCanvasItem requires
 <link linkend="GObject">GObject</link>.</para>

</refsect1>



<refsect1 role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
GooCanvasItem is implemented by
 <link linkend="GooCanvasGrid">GooCanvasGrid</link>,  <link linkend="GooCanvasRect">GooCanvasRect</link>,  <link linkend="GooCanvasTable">GooCanvasTable</link>,  <link linkend="GooCanvasPolyline">GooCanvasPolyline</link>,  <link linkend="GooCanvasPath">GooCanvasPath</link>,  <link linkend="GooCanvasEllipse">GooCanvasEllipse</link>,  <link linkend="GooCanvasText">GooCanvasText</link>,  <link linkend="GooCanvasWidget">GooCanvasWidget</link>,  <link linkend="GooCanvasImage">GooCanvasImage</link>,  <link linkend="GooCanvasGroup">GooCanvasGroup</link> and  <link linkend="GooCanvasItemSimple">GooCanvasItemSimple</link>.</para>

</refsect1>

<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="GooCanvasItem--can-focus">can-focus</link>&quot;                <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GooCanvasItem--description">description</link>&quot;              <link linkend="gchararray">gchararray</link>            : Read / Write
  &quot;<link linkend="GooCanvasItem--parent">parent</link>&quot;                   <link linkend="GooCanvasItem">GooCanvasItem</link>         : Read / Write
  &quot;<link linkend="GooCanvasItem--pointer-events">pointer-events</link>&quot;           <link linkend="GooCanvasPointerEvents">GooCanvasPointerEvents</link>  : Read / Write
  &quot;<link linkend="GooCanvasItem--title">title</link>&quot;                    <link linkend="gchararray">gchararray</link>            : Read / Write
  &quot;<link linkend="GooCanvasItem--tooltip">tooltip</link>&quot;                  <link linkend="gchararray">gchararray</link>            : Read / Write
  &quot;<link linkend="GooCanvasItem--transform">transform</link>&quot;                <link linkend="GooCairoMatrix">GooCairoMatrix</link>        : Read / Write
  &quot;<link linkend="GooCanvasItem--visibility">visibility</link>&quot;               <link linkend="GooCanvasItemVisibility">GooCanvasItemVisibility</link>  : Read / Write
  &quot;<link linkend="GooCanvasItem--visibility-threshold">visibility-threshold</link>&quot;     <link linkend="gdouble">gdouble</link>               : Read / Write
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  &quot;<link linkend="GooCanvasItem-animation-finished">animation-finished</link>&quot;                             : Run Last
  &quot;<link linkend="GooCanvasItem-button-press-event">button-press-event</link>&quot;                             : Run Last
  &quot;<link linkend="GooCanvasItem-button-release-event">button-release-event</link>&quot;                           : Run Last
  &quot;<link linkend="GooCanvasItem-child-notify">child-notify</link>&quot;                                   : Run First / No Recursion / Has Details / No Hooks
  &quot;<link linkend="GooCanvasItem-enter-notify-event">enter-notify-event</link>&quot;                             : Run Last
  &quot;<link linkend="GooCanvasItem-focus-in-event">focus-in-event</link>&quot;                                 : Run Last
  &quot;<link linkend="GooCanvasItem-focus-out-event">focus-out-event</link>&quot;                                : Run Last
  &quot;<link linkend="GooCanvasItem-grab-broken-event">grab-broken-event</link>&quot;                              : Run Last
  &quot;<link linkend="GooCanvasItem-key-press-event">key-press-event</link>&quot;                                : Run Last
  &quot;<link linkend="GooCanvasItem-key-release-event">key-release-event</link>&quot;                              : Run Last
  &quot;<link linkend="GooCanvasItem-leave-notify-event">leave-notify-event</link>&quot;                             : Run Last
  &quot;<link linkend="GooCanvasItem-motion-notify-event">motion-notify-event</link>&quot;                            : Run Last
  &quot;<link linkend="GooCanvasItem-query-tooltip">query-tooltip</link>&quot;                                  : Run Last
  &quot;<link linkend="GooCanvasItem-scroll-event">scroll-event</link>&quot;                                   : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> defines the interface that canvas items must implement,
and contains methods for operating on canvas items.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GooCanvasItem-struct" role="struct"/>GooCanvasItem</title>
<indexterm><primary>GooCanvasItem</primary></indexterm><programlisting>typedef struct _GooCanvasItem GooCanvasItem;</programlisting>
<para>
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> is a typedef used for objects that implement the
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> interface.
</para>
<para>
(There is no actual <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> struct, since it is only an interface.
But using '<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>' is more helpful than using '<link linkend="GObject"><type>GObject</type></link>'.)</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GooCanvasItemIface" role="struct"/>GooCanvasItemIface</title>
<indexterm><primary>GooCanvasItemIface</primary></indexterm><programlisting>typedef struct {
  /* Virtual methods that group items must implement. */
  GooCanvas*		(* get_canvas)			(GooCanvasItem		*item);
  void			(* set_canvas)			(GooCanvasItem		*item,
							 GooCanvas		*canvas);
  gint			(* get_n_children)		(GooCanvasItem		*item);
  GooCanvasItem*	(* get_child)			(GooCanvasItem		*item,
							 gint			 child_num);
  void			(* request_update)		(GooCanvasItem		*item);

  /* Virtual methods that group items may implement. */
  void			(* add_child)			(GooCanvasItem		*item,
							 GooCanvasItem		*child,
							 gint			 position);
  void			(* move_child)			(GooCanvasItem		*item,
							 gint			 old_position,
							 gint			 new_position);
  void			(* remove_child)		(GooCanvasItem		*item,
							 gint			 child_num);
  void			(* get_child_property)		(GooCanvasItem		*item,
							 GooCanvasItem		*child,
							 guint			 property_id,
							 GValue			*value,
							 GParamSpec		*pspec);
  void			(* set_child_property)		(GooCanvasItem		*item,
							 GooCanvasItem		*child,
							 guint			 property_id,
							 const GValue		*value,
							 GParamSpec		*pspec);
  gboolean		(* get_transform_for_child)	(GooCanvasItem		*item,
							 GooCanvasItem		*child,
							 cairo_matrix_t		*transform);

  /* Virtual methods that all canvas items must implement. */
  GooCanvasItem*	(* get_parent)			(GooCanvasItem		*item);
  void			(* set_parent)			(GooCanvasItem		*item,
							 GooCanvasItem		*parent);
  void			(* get_bounds)			(GooCanvasItem		*item,
							 GooCanvasBounds	*bounds);
  GList*		(* get_items_at)		(GooCanvasItem		*item,
							 gdouble		 x,
							 gdouble		 y,
							 cairo_t		*cr,
							 gboolean		 is_pointer_event,
							 gboolean		 parent_is_visible,
							 GList                  *found_items);
  void			(* update)			(GooCanvasItem		*item,
							 gboolean		 entire_tree,
							 cairo_t		*cr,
							 GooCanvasBounds	*bounds);
  void			(* paint)			(GooCanvasItem		*item,
							 cairo_t		*cr,
							 const GooCanvasBounds	*bounds,
							 gdouble		 scale);

  gboolean		(* get_requested_area)		(GooCanvasItem		*item,
							 cairo_t		*cr,
							 GooCanvasBounds	*requested_area);
  void			(* allocate_area)		(GooCanvasItem		*item,
							 cairo_t		*cr,
							 const GooCanvasBounds	*requested_area,
							 const GooCanvasBounds	*allocated_area,
							 gdouble		 x_offset,
							 gdouble		 y_offset);

  /* Virtual methods that canvas items may implement. */
  gboolean		(* get_transform)		(GooCanvasItem		*item,
							 cairo_matrix_t		*transform);
  void			(* set_transform)		(GooCanvasItem		*item,
							 const cairo_matrix_t	*transform);
  GooCanvasStyle*	(* get_style)			(GooCanvasItem		*item);
  void			(* set_style)			(GooCanvasItem		*item,
							 GooCanvasStyle		*style);
  gboolean		(* is_visible)			(GooCanvasItem		*item);
  gdouble               (* get_requested_height)	(GooCanvasItem		*item,
							 cairo_t		*cr,
							 gdouble		 width);

  /* Virtual methods that model/view items must implement. */
  GooCanvasItemModel*	(* get_model)			(GooCanvasItem		*item);
  void			(* set_model)			(GooCanvasItem		*item,
							 GooCanvasItemModel	*model);


  /* Signals. */
  gboolean		(* enter_notify_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventCrossing	*event);
  gboolean		(* leave_notify_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventCrossing	*event);
  gboolean		(* motion_notify_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventMotion		*event);
  gboolean		(* button_press_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventButton		*event);
  gboolean		(* button_release_event)	(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventButton		*event);
  gboolean		(* focus_in_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventFocus		*event);
  gboolean		(* focus_out_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventFocus		*event);
  gboolean		(* key_press_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventKey		*event);
  gboolean		(* key_release_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventKey		*event);
  gboolean		(* grab_broken_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventGrabBroken	*event);
  void			(* child_notify)		(GooCanvasItem		*item,
							 GParamSpec		*pspec);
  gboolean		(* query_tooltip)		(GooCanvasItem		*item,
							 gdouble		 x,
							 gdouble		 y,
							 gboolean		 keyboard_tooltip,
							 GtkTooltip		*tooltip);

  gboolean		(* get_is_static)		(GooCanvasItem		*item);
  void			(* set_is_static)		(GooCanvasItem		*item,
							 gboolean		 is_static);

  void			(* animation_finished)		(GooCanvasItem           *item,
							 gboolean                 stopped);

  gboolean		(* scroll_event)		(GooCanvasItem		*item,
							 GooCanvasItem		*target,
							 GdkEventScroll		*event);
} GooCanvasItemIface;
</programlisting>
<para>
<link linkend="GooCanvasItemIFace"><type>GooCanvasItemIFace</type></link> holds the virtual methods that make up the
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> interface.
</para>
<para>
Simple canvas items only need to implement the <link linkend="get-parent"><function>get_parent()</function></link>, <link linkend="set-parent"><function>set_parent()</function></link>,
<link linkend="get-bounds"><function>get_bounds()</function></link>, <link linkend="get-items-at"><function>get_items_at()</function></link>, <link linkend="update"><function>update()</function></link> and <link linkend="paint"><function>paint()</function></link> methods (and also
<link linkend="get-requested-area"><function>get_requested_area()</function></link> and <link linkend="allocate-area"><function>allocate_area()</function></link> if they are going to be used
inside a layout container like <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>).
</para>
<para>
Items that support transforms should also implement <link linkend="get-transform"><function>get_transform()</function></link> and
<link linkend="set-transform"><function>set_transform()</function></link>. Items that support styles should implement <link linkend="get-style"><function>get_style()</function></link>
and <link linkend="set-style"><function>set_style()</function></link>.
</para>
<para>
Container items must implement <link linkend="get-canvas"><function>get_canvas()</function></link>, <link linkend="set-canvas"><function>set_canvas()</function></link>,
<link linkend="get-n-children"><function>get_n_children()</function></link>, <link linkend="get-child"><function>get_child()</function></link> and <link linkend="request-update"><function>request_update()</function></link>. Containers that support
dynamic changes to their children should implement <link linkend="add-child"><function>add_child()</function></link>,
<link linkend="move-child"><function>move_child()</function></link> and <link linkend="remove-child"><function>remove_child()</function></link>. Layout containers like <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>
may implement <link linkend="get-child-property"><function>get_child_property()</function></link>, <link linkend="set-child-property"><function>set_child_property()</function></link> and
<link linkend="get-transform-for-child"><function>get_transform_for_child()</function></link>.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><structfield>get_canvas</structfield>&nbsp;()</term>
<listitem><simpara> returns the canvas the item is in.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>set_canvas</structfield>&nbsp;()</term>
<listitem><simpara> sets the canvas the item is in.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_n_children</structfield>&nbsp;()</term>
<listitem><simpara> returns the number of children of the item.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_child</structfield>&nbsp;()</term>
<listitem><simpara> returns the child at the given index.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>request_update</structfield>&nbsp;()</term>
<listitem><simpara> requests that an update is scheduled.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>add_child</structfield>&nbsp;()</term>
<listitem><simpara> adds a child.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>move_child</structfield>&nbsp;()</term>
<listitem><simpara> moves a child up or down the stacking order.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>remove_child</structfield>&nbsp;()</term>
<listitem><simpara> removes a child.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_child_property</structfield>&nbsp;()</term>
<listitem><simpara> gets a child property of a given child item,
 e.g. the "row" or "column" property of an item in a <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>set_child_property</structfield>&nbsp;()</term>
<listitem><simpara> sets a child property for a given child item.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_transform_for_child</structfield>&nbsp;()</term>
<listitem><simpara> gets the transform used to lay out a given child.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_parent</structfield>&nbsp;()</term>
<listitem><simpara> gets the item's parent.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>set_parent</structfield>&nbsp;()</term>
<listitem><simpara> sets the item's parent.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_bounds</structfield>&nbsp;()</term>
<listitem><simpara> gets the bounds of the item.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_items_at</structfield>&nbsp;()</term>
<listitem><simpara> gets all the items at the given point.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>update</structfield>&nbsp;()</term>
<listitem><simpara> updates the item, if needed. It recalculates the bounds of the item
 and requests redraws of parts of the canvas if necessary.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>paint</structfield>&nbsp;()</term>
<listitem><simpara> renders the item to the given cairo context.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_requested_area</structfield>&nbsp;()</term>
<listitem><simpara> returns the requested area of the item, in its parent's
 coordinate space. This is only used for items in layout containers such as
 <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>allocate_area</structfield>&nbsp;()</term>
<listitem><simpara> allocates the item's area, in its parent's coordinate space.
 The item must recalculate its bounds and request redraws of parts of the
 canvas if necessary. This is only used for items in layout containers such
 as <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_transform</structfield>&nbsp;()</term>
<listitem><simpara> gets the item's transformation matrix.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>set_transform</structfield>&nbsp;()</term>
<listitem><simpara> sets the item's transformation matrix.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_style</structfield>&nbsp;()</term>
<listitem><simpara> gets the item's style.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>set_style</structfield>&nbsp;()</term>
<listitem><simpara> sets the item's style.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>is_visible</structfield>&nbsp;()</term>
<listitem><simpara> returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the item is currently visible.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_requested_height</structfield>&nbsp;()</term>
<listitem><simpara> returns the requested height of the item,
 given a particular allocated width, using the parent's coordinate space.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_model</structfield>&nbsp;()</term>
<listitem><simpara> gets the model that the canvas item is viewing.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>set_model</structfield>&nbsp;()</term>
<listitem><simpara> sets the model that the canvas item will view.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>enter_notify_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when the mouse enters the item.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>leave_notify_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when the mouse leaves the item.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>motion_notify_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when the mouse moves within the item.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>button_press_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when a mouse button is pressed within
 the item.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>button_release_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when a mouse button is released.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>focus_in_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when the item receices the keyboard focus.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>focus_out_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when the item loses the keyboard focus.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>key_press_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when a key is pressed.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>key_release_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when a key is released.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>grab_broken_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when a grab that the item has is lost.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>child_notify</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when a child property is changed.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>query_tooltip</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted to query the tooltip of an item.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>get_is_static</structfield>&nbsp;()</term>
<listitem><simpara> returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the item is static.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>set_is_static</structfield>&nbsp;()</term>
<listitem><simpara> notifies the item whether it is static or not.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>animation_finished</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when the item's animation has finished.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>scroll_event</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when the mouse wheel is activated within
the item.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-translate" role="function"/>goo_canvas_item_translate ()</title>
<indexterm><primary>goo_canvas_item_translate</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_translate           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> tx,
                                                         <link linkend="gdouble">gdouble</link> ty);</programlisting>
<para>
Translates the origin of the item's coordinate system by the given amounts.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tx</parameter>&nbsp;:</term>
<listitem><simpara> the amount to move the origin in the horizontal direction.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ty</parameter>&nbsp;:</term>
<listitem><simpara> the amount to move the origin in the vertical direction.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-scale" role="function"/>goo_canvas_item_scale ()</title>
<indexterm><primary>goo_canvas_item_scale</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_scale               (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> sx,
                                                         <link linkend="gdouble">gdouble</link> sy);</programlisting>
<para>
Scales the item's coordinate system by the given amounts.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sx</parameter>&nbsp;:</term>
<listitem><simpara> the amount to scale the horizontal axis.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sy</parameter>&nbsp;:</term>
<listitem><simpara> the amount to scale the vertical axis.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-rotate" role="function"/>goo_canvas_item_rotate ()</title>
<indexterm><primary>goo_canvas_item_rotate</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_rotate              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> degrees,
                                                         <link linkend="gdouble">gdouble</link> cx,
                                                         <link linkend="gdouble">gdouble</link> cy);</programlisting>
<para>
Rotates the item's coordinate system by the given amount, about the given
origin.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>degrees</parameter>&nbsp;:</term>
<listitem><simpara> the clockwise angle of rotation.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cx</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the origin of the rotation.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cy</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the origin of the rotation.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-skew-x" role="function"/>goo_canvas_item_skew_x ()</title>
<indexterm><primary>goo_canvas_item_skew_x</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_skew_x              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> degrees,
                                                         <link linkend="gdouble">gdouble</link> cx,
                                                         <link linkend="gdouble">gdouble</link> cy);</programlisting>
<para>
Skews the item's coordinate system along the x axis by the given amount,
about the given origin.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>degrees</parameter>&nbsp;:</term>
<listitem><simpara> the skew angle.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cx</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the origin of the skew transform.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cy</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the origin of the skew transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-skew-y" role="function"/>goo_canvas_item_skew_y ()</title>
<indexterm><primary>goo_canvas_item_skew_y</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_skew_y              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> degrees,
                                                         <link linkend="gdouble">gdouble</link> cx,
                                                         <link linkend="gdouble">gdouble</link> cy);</programlisting>
<para>
Skews the item's coordinate system along the y axis by the given amount,
about the given origin.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>degrees</parameter>&nbsp;:</term>
<listitem><simpara> the skew angle.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cx</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the origin of the skew transform.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cy</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the origin of the skew transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-transform" role="function"/>goo_canvas_item_get_transform ()</title>
<indexterm><primary>goo_canvas_item_get_transform</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            goo_canvas_item_get_transform       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-matrix-t">cairo_matrix_t</link> *transform);</programlisting>
<para>
Gets the transformation matrix of an item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transform</parameter>&nbsp;:</term>
<listitem><simpara> the place to store the transform.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a transform is set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-transform" role="function"/>goo_canvas_item_set_transform ()</title>
<indexterm><primary>goo_canvas_item_set_transform</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_transform       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         const <link linkend="cairo-matrix-t">cairo_matrix_t</link> *transform);</programlisting>
<para>
Sets the transformation matrix of an item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transform</parameter>&nbsp;:</term>
<listitem><simpara> the new transformation matrix, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to reset the
 transformation to the identity matrix.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-simple-transform" role="function"/>goo_canvas_item_get_simple_transform ()</title>
<indexterm><primary>goo_canvas_item_get_simple_transform</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            goo_canvas_item_get_simple_transform
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y,
                                                         <link linkend="gdouble">gdouble</link> *scale,
                                                         <link linkend="gdouble">gdouble</link> *rotation);</programlisting>
<para>
This function can be used to get the position, scale and rotation of an
item, providing that the item has a simple transformation matrix
(e.g. set with <link linkend="goo-canvas-item-set-simple-transform"><function>goo_canvas_item_set_simple_transform()</function></link>, or using a
combination of simple translate, scale and rotate operations). If the item
has a complex transformation matrix the results will be incorrect.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> returns the x coordinate of the origin of the item's coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> returns the y coordinate of the origin of the item's coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara> returns the scale of the item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rotation</parameter>&nbsp;:</term>
<listitem><simpara> returns the clockwise rotation of the item, in degrees (0-360).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a transform is set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-simple-transform" role="function"/>goo_canvas_item_set_simple_transform ()</title>
<indexterm><primary>goo_canvas_item_set_simple_transform</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_simple_transform
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="gdouble">gdouble</link> scale,
                                                         <link linkend="gdouble">gdouble</link> rotation);</programlisting>
<para>
A convenience function to set the item's transformation matrix.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the origin of the item's coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the origin of the item's coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara> the scale of the item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rotation</parameter>&nbsp;:</term>
<listitem><simpara> the clockwise rotation of the item, in degrees.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-bounds" role="function"/>goo_canvas_item_get_bounds ()</title>
<indexterm><primary>goo_canvas_item_get_bounds</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_get_bounds          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds);</programlisting>
<para>
Gets the bounds of the item.
</para>
<para>
Note that the bounds includes the entire fill and stroke extents of the
item, whether they are painted or not.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bounds</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasBounds"><type>GooCanvasBounds</type></link> to return the bounds in.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-is-visible" role="function"/>goo_canvas_item_is_visible ()</title>
<indexterm><primary>goo_canvas_item_is_visible</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            goo_canvas_item_is_visible          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Checks if the item is visible.
</para>
<para>
This entails checking the item's own visibility setting, as well as those
of its ancestors.
</para>
<para>
Note that the item may be scrolled off the screen and so may not
be actually visible to the user.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the item is visible.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-is-static" role="function"/>goo_canvas_item_get_is_static ()</title>
<indexterm><primary>goo_canvas_item_get_is_static</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            goo_canvas_item_get_is_static       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the item is static. Static items do not move or change
size when the canvas is scrolled or the scale changes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the item is static.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-is-static" role="function"/>goo_canvas_item_set_is_static ()</title>
<indexterm><primary>goo_canvas_item_set_is_static</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_is_static       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gboolean">gboolean</link> is_static);</programlisting>
<para>
Notifies the item that it is static. Static items do not move or change
size when the canvas is scrolled or the scale changes.
</para>
<para>
Container items such as <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link> should call this function when
children are added, to notify children whether they are static or not.
Containers should also pass on any changes in their own status to children.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_static</parameter>&nbsp;:</term>
<listitem><simpara> if the item is static.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-animate" role="function"/>goo_canvas_item_animate ()</title>
<indexterm><primary>goo_canvas_item_animate</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_animate             (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="gdouble">gdouble</link> scale,
                                                         <link linkend="gdouble">gdouble</link> degrees,
                                                         <link linkend="gboolean">gboolean</link> absolute,
                                                         <link linkend="gint">gint</link> duration,
                                                         <link linkend="gint">gint</link> step_time,
                                                         <link linkend="GooCanvasAnimateType">GooCanvasAnimateType</link> type);</programlisting>
<para>
Animates an item from its current position to the given offsets, scale
and rotation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the final x coordinate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the final y coordinate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara> the final scale.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>degrees</parameter>&nbsp;:</term>
<listitem><simpara> the final rotation. This can be negative to rotate anticlockwise,
 and can also be greater than 360 to rotate a number of times.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>absolute</parameter>&nbsp;:</term>
<listitem><simpara> if the <parameter>x</parameter>, <parameter>y</parameter>, <parameter>scale</parameter> and <parameter>degrees</parameter> values are absolute, or
 relative to the current transform. Note that absolute animations only work
 if the item currently has a simple transform. If the item has a shear or
 some other complicated transform it may result in strange animations.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>duration</parameter>&nbsp;:</term>
<listitem><simpara> the duration of the animation, in milliseconds (1/1000ths of a
 second).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>step_time</parameter>&nbsp;:</term>
<listitem><simpara> the time between each animation step, in milliseconds.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> specifies what happens when the animation finishes.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-stop-animation" role="function"/>goo_canvas_item_stop_animation ()</title>
<indexterm><primary>goo_canvas_item_stop_animation</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_stop_animation      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Stops any current animation for the given item, leaving it at its current
position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-raise" role="function"/>goo_canvas_item_raise ()</title>
<indexterm><primary>goo_canvas_item_raise</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_raise               (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *above);</programlisting>
<para>
Raises an item in the stacking order.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>above</parameter>&nbsp;:</term>
<listitem><simpara> the item to raise <parameter>item</parameter> above, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to raise <parameter>item</parameter> to the top
 of the stack.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-lower" role="function"/>goo_canvas_item_lower ()</title>
<indexterm><primary>goo_canvas_item_lower</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_lower               (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *below);</programlisting>
<para>
Lowers an item in the stacking order.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>below</parameter>&nbsp;:</term>
<listitem><simpara> the item to lower <parameter>item</parameter> below, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to lower <parameter>item</parameter> to the
 bottom of the stack.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-remove" role="function"/>goo_canvas_item_remove ()</title>
<indexterm><primary>goo_canvas_item_remove</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_remove              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Removes an item from its parent. If the item is in a canvas it will be
removed.
</para>
<para>
This would normally also result in the item being freed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-canvas" role="function"/>goo_canvas_item_get_canvas ()</title>
<indexterm><primary>goo_canvas_item_get_canvas</primary></indexterm><programlisting><link linkend="GooCanvas">GooCanvas</link>*          goo_canvas_item_get_canvas          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Returns the <link linkend="GooCanvas"><type>GooCanvas</type></link> containing the given <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-canvas" role="function"/>goo_canvas_item_set_canvas ()</title>
<indexterm><primary>goo_canvas_item_set_canvas</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_canvas          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically container items such as <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link>.
</para>
<para>
It sets the canvas of the item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-parent" role="function"/>goo_canvas_item_get_parent ()</title>
<indexterm><primary>goo_canvas_item_get_parent</primary></indexterm><programlisting><link linkend="GooCanvasItem">GooCanvasItem</link>*      goo_canvas_item_get_parent          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Gets the parent of the given item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the parent item, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the item has no parent.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-parent" role="function"/>goo_canvas_item_set_parent ()</title>
<indexterm><primary>goo_canvas_item_set_parent</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_parent          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *parent);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items (specifically container items such as <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link>).
It sets the parent of the child item.
</para>
<variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&nbsp;:</term>
<listitem><simpara> the new parent item.
</simpara></listitem></varlistentry>
</variablelist>
<para>
<note><para>
This function cannot be used to add an item to a group
or to change the parent of an item.
To do that use the <link linkend="GooCanvasItem--parent"><type>"parent"</type></link> property.
</para></note></para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-model" role="function"/>goo_canvas_item_get_model ()</title>
<indexterm><primary>goo_canvas_item_get_model</primary></indexterm><programlisting><link linkend="GooCanvasItemModel">GooCanvasItemModel</link>* goo_canvas_item_get_model           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Gets the model of the given canvas item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the item's model, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if it has no model.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-model" role="function"/>goo_canvas_item_set_model ()</title>
<indexterm><primary>goo_canvas_item_set_model</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_model           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);</programlisting>
<para>
Sets the model of the given canvas item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItemModel"><type>GooCanvasItemModel</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-is-container" role="function"/>goo_canvas_item_is_container ()</title>
<indexterm><primary>goo_canvas_item_is_container</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            goo_canvas_item_is_container        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Tests to see if the given item is a container.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the item is a container.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-n-children" role="function"/>goo_canvas_item_get_n_children ()</title>
<indexterm><primary>goo_canvas_item_get_n_children</primary></indexterm><programlisting><link linkend="gint">gint</link>                goo_canvas_item_get_n_children      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Gets the number of children of the container.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a container item.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the number of children.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-child" role="function"/>goo_canvas_item_get_child ()</title>
<indexterm><primary>goo_canvas_item_get_child</primary></indexterm><programlisting><link linkend="GooCanvasItem">GooCanvasItem</link>*      goo_canvas_item_get_child           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gint">gint</link> child_num);</programlisting>
<para>
Gets the child item at the given stack position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a container item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child_num</parameter>&nbsp;:</term>
<listitem><simpara> the position of a child in the container's stack.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the child item at the given stack position, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>child_num</parameter>
is out of range.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-find-child" role="function"/>goo_canvas_item_find_child ()</title>
<indexterm><primary>goo_canvas_item_find_child</primary></indexterm><programlisting><link linkend="gint">gint</link>                goo_canvas_item_find_child          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child);</programlisting>
<para>
Attempts to find the given child item with the container's stack.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a container item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> the child item to find.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the position of the given <parameter>child</parameter> item, or -1 if it isn't found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-add-child" role="function"/>goo_canvas_item_add_child ()</title>
<indexterm><primary>goo_canvas_item_add_child</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_add_child           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         <link linkend="gint">gint</link> position);</programlisting>
<para>
Adds a child item to a container item at the given stack position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the container to add the item to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> the item to add.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> the position of the item, or -1 to place it last (at the top of
 the stacking order).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-move-child" role="function"/>goo_canvas_item_move_child ()</title>
<indexterm><primary>goo_canvas_item_move_child</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_move_child          (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gint">gint</link> old_position,
                                                         <link linkend="gint">gint</link> new_position);</programlisting>
<para>
Moves a child item to a new stack position within the container.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a container item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>old_position</parameter>&nbsp;:</term>
<listitem><simpara> the current position of the child item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_position</parameter>&nbsp;:</term>
<listitem><simpara> the new position of the child item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-remove-child" role="function"/>goo_canvas_item_remove_child ()</title>
<indexterm><primary>goo_canvas_item_remove_child</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_remove_child        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gint">gint</link> child_num);</programlisting>
<para>
Removes the child item at the given position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a container item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child_num</parameter>&nbsp;:</term>
<listitem><simpara> the position of the child item to remove.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-transform-for-child" role="function"/>goo_canvas_item_get_transform_for_child ()</title>
<indexterm><primary>goo_canvas_item_get_transform_for_child</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            goo_canvas_item_get_transform_for_child
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         <link linkend="cairo-matrix-t">cairo_matrix_t</link> *transform);</programlisting>
<para>
Gets the transformation matrix of an item combined with any special
transform needed for the given child. These special transforms are used
by layout items such as <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> a child of <parameter>item</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transform</parameter>&nbsp;:</term>
<listitem><simpara> the place to store the transform.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a transform is set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-style" role="function"/>goo_canvas_item_get_style ()</title>
<indexterm><primary>goo_canvas_item_get_style</primary></indexterm><programlisting><link linkend="GooCanvasStyle">GooCanvasStyle</link>*     goo_canvas_item_get_style           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Gets the item's style. If the item doesn't have its own style it will return
its parent's style.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the item's style.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-style" role="function"/>goo_canvas_item_set_style ()</title>
<indexterm><primary>goo_canvas_item_set_style</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_style           (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasStyle">GooCanvasStyle</link> *style);</programlisting>
<para>
Sets the item's style, by copying the properties from the given style.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> an item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> a style.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-request-update" role="function"/>goo_canvas_item_request_update ()</title>
<indexterm><primary>goo_canvas_item_request_update</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_request_update      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items.
</para>
<para>
It requests that an update of the item is scheduled. It will be performed
as soon as the application is idle, and before the canvas is redrawn.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-ensure-updated" role="function"/>goo_canvas_item_ensure_updated ()</title>
<indexterm><primary>goo_canvas_item_ensure_updated</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_ensure_updated      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items.
</para>
<para>
It updates the canvas immediately, if an update is scheduled.
This ensures that all item bounds are up-to-date.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-update" role="function"/>goo_canvas_item_update ()</title>
<indexterm><primary>goo_canvas_item_update</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_update              (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gboolean">gboolean</link> entire_tree,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically container items such as <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link>.
</para>
<para>
Updates the item, if needed, and any children.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>entire_tree</parameter>&nbsp;:</term>
<listitem><simpara> if the entire subtree should be updated.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&nbsp;:</term>
<listitem><simpara> a cairo context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bounds</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasBounds"><type>GooCanvasBounds</type></link> to return the new bounds in.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-requested-area" role="function"/>goo_canvas_item_get_requested_area ()</title>
<indexterm><primary>goo_canvas_item_get_requested_area</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            goo_canvas_item_get_requested_area  (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="GooCanvasBounds">GooCanvasBounds</link> *requested_area);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically layout items such as <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</para>
<para>
It gets the requested area of a child item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&nbsp;:</term>
<listitem><simpara> a cairo context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>requested_area</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasBounds"><type>GooCanvasBounds</type></link> to return the requested area in, in the
 parent's coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the item should be allocated space.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-requested-height" role="function"/>goo_canvas_item_get_requested_height ()</title>
<indexterm><primary>goo_canvas_item_get_requested_height</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             goo_canvas_item_get_requested_height
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gdouble">gdouble</link> width);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically layout items such as <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</para>
<para>
It gets the requested height of a child item, assuming it is allocated the
given width. This is useful for text items whose requested height may change
depending on the allocated width.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&nbsp;:</term>
<listitem><simpara> a cairo context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the width that the item may be allocated.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the requested height of the item, given the allocated width,
 or <link linkend="1:CAPS"><literal>-1</literal></link> if the item doesn't support this method or its height doesn't
 change when allocated different widths.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-allocate-area" role="function"/>goo_canvas_item_allocate_area ()</title>
<indexterm><primary>goo_canvas_item_allocate_area</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_allocate_area       (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *requested_area,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *allocated_area,
                                                         <link linkend="gdouble">gdouble</link> x_offset,
                                                         <link linkend="gdouble">gdouble</link> y_offset);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically layout items such as <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</para>
<para>
It allocates an area to a child <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</para>
<para>
Note that the parent layout item will use a transform to move each of its
children for the layout, so there is no need for the child item to
reposition itself. It only needs to recalculate its device bounds.
</para>
<para>
To help recalculate the item's device bounds, the <parameter>x_offset</parameter> and <parameter>y_offset</parameter>
of the child item's allocated position from its requested position are
provided. Simple items can just add these to their bounds.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&nbsp;:</term>
<listitem><simpara> a cairo context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>requested_area</parameter>&nbsp;:</term>
<listitem><simpara> the area that the item originally requested, in the
 parent's coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>allocated_area</parameter>&nbsp;:</term>
<listitem><simpara> the area that the item has been allocated, in the parent's
 coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x_offset</parameter>&nbsp;:</term>
<listitem><simpara> the x offset of the allocated area from the requested area in
 the device coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_offset</parameter>&nbsp;:</term>
<listitem><simpara> the y offset of the allocated area from the requested area in
 the device coordinate space.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-items-at" role="function"/>goo_canvas_item_get_items_at ()</title>
<indexterm><primary>goo_canvas_item_get_items_at</primary></indexterm><programlisting><link linkend="GList">GList</link>*              goo_canvas_item_get_items_at        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gboolean">gboolean</link> is_pointer_event,
                                                         <link linkend="gboolean">gboolean</link> parent_is_visible,
                                                         <link linkend="GList">GList</link> *found_items);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically container items such as <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link>.
</para>
<para>
It gets the items at the given point.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the point.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the point.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&nbsp;:</term>
<listitem><simpara> a cairo contect.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_pointer_event</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the "pointer-events" properties of items should
 be used to determine which parts of the item are tested.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent_is_visible</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the parent item is visible (which
 implies that all ancestors are also visible).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>found_items</parameter>&nbsp;:</term>
<listitem><simpara> the list of items found so far.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <parameter>found_items</parameter> list, with any more found items added onto
 the start of the list, leaving the top item first.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-paint" role="function"/>goo_canvas_item_paint ()</title>
<indexterm><primary>goo_canvas_item_paint</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_paint               (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds,
                                                         <link linkend="gdouble">gdouble</link> scale);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically container items such as <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link>.
</para>
<para>
It paints the item and all children if they intersect the given bounds.
</para>
<para>
Note that the <parameter>scale</parameter> argument may be different to the current scale in the
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>, e.g. when the canvas is being printed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&nbsp;:</term>
<listitem><simpara> a cairo context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bounds</parameter>&nbsp;:</term>
<listitem><simpara> the bounds that need to be repainted, in device space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara> the scale to use to determine whether an item should be painted.
 See <link linkend="GooCanvasItem--visibility-threshold"><type>"visibility-threshold"</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-class-install-child-property" role="function"/>goo_canvas_item_class_install_child_property ()</title>
<indexterm><primary>goo_canvas_item_class_install_child_property</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_class_install_child_property
                                                        (<link linkend="GObjectClass">GObjectClass</link> *iclass,
                                                         <link linkend="guint">guint</link> property_id,
                                                         <link linkend="GParamSpec">GParamSpec</link> *pspec);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically layout container items such as <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</para>
<para>
It installs a child property on a canvas item class.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>iclass</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObjectClass"><type>GObjectClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property_id</parameter>&nbsp;:</term>
<listitem><simpara> the id for the property
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pspec</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GParamSpec"><type>GParamSpec</type></link> for the property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-class-list-child-properties" role="function"/>goo_canvas_item_class_list_child_properties ()</title>
<indexterm><primary>goo_canvas_item_class_list_child_properties</primary></indexterm><programlisting><link linkend="GParamSpec">GParamSpec</link>**        goo_canvas_item_class_list_child_properties
                                                        (<link linkend="GObjectClass">GObjectClass</link> *iclass,
                                                         <link linkend="guint">guint</link> *n_properties);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically layout container items such as <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</para>
<para>
It returns all child properties of a canvas item class.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>iclass</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObjectClass"><type>GObjectClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_properties</parameter>&nbsp;:</term>
<listitem><simpara> location to return the number of child properties found
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly allocated array of <link linkend="GParamSpec"><type>GParamSpec</type></link>*. The array must be 
          freed with <link linkend="g-free"><function>g_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-class-find-child-property" role="function"/>goo_canvas_item_class_find_child_property ()</title>
<indexterm><primary>goo_canvas_item_class_find_child_property</primary></indexterm><programlisting><link linkend="GParamSpec">GParamSpec</link>*         goo_canvas_item_class_find_child_property
                                                        (<link linkend="GObjectClass">GObjectClass</link> *iclass,
                                                         const <link linkend="gchar">gchar</link> *property_name);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, specifically layout container items such as <link linkend="GooCanvasTable"><type>GooCanvasTable</type></link>.
</para>
<para>
It finds a child property of a canvas item class by name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>iclass</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObjectClass"><type>GObjectClass</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property_name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the child property to find
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GParamSpec"><type>GParamSpec</type></link> of the child property or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>class</parameter> has no
  child property with that name.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-child-property" role="function"/>goo_canvas_item_get_child_property ()</title>
<indexterm><primary>goo_canvas_item_get_child_property</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_get_child_property  (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         const <link linkend="gchar">gchar</link> *property_name,
                                                         <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
Gets a child property of <parameter>child</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> a child <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property_name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the child property to get.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> a location to return the value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-child-property" role="function"/>goo_canvas_item_set_child_property ()</title>
<indexterm><primary>goo_canvas_item_set_child_property</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_child_property  (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         const <link linkend="gchar">gchar</link> *property_name,
                                                         const <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
Sets a child property of <parameter>child</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> a child <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property_name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the child property to set.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> the value to set the property to.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-child-properties" role="function"/>goo_canvas_item_get_child_properties ()</title>
<indexterm><primary>goo_canvas_item_get_child_properties</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_get_child_properties
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         ...);</programlisting>
<para>
Gets the values of one or more child properties of <parameter>child</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> a child <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> pairs of property names and value pointers, and a terminating <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-get-child-properties-valist" role="function"/>goo_canvas_item_get_child_properties_valist ()</title>
<indexterm><primary>goo_canvas_item_get_child_properties_valist</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_get_child_properties_valist
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         <link linkend="va-list">va_list</link> var_args);</programlisting>
<para>
Gets the values of one or more child properties of <parameter>child</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> a child <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>var_args</parameter>&nbsp;:</term>
<listitem><simpara> pairs of property names and value pointers, and a terminating
 <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-child-properties" role="function"/>goo_canvas_item_set_child_properties ()</title>
<indexterm><primary>goo_canvas_item_set_child_properties</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_child_properties
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         ...);</programlisting>
<para>
Sets the values of one or more child properties of <parameter>child</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> a child <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> pairs of property names and values, and a terminating <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-item-set-child-properties-valist" role="function"/>goo_canvas_item_set_child_properties_valist ()</title>
<indexterm><primary>goo_canvas_item_set_child_properties_valist</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_item_set_child_properties_valist
                                                        (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *child,
                                                         <link linkend="va-list">va_list</link> var_args);</programlisting>
<para>
Sets the values of one or more child properties of <parameter>child</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&nbsp;:</term>
<listitem><simpara> a child <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>var_args</parameter>&nbsp;:</term>
<listitem><simpara> pairs of property names and values, and a terminating <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GooCanvasItem--can-focus"/>The <literal>&quot;can-focus&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:can-focus</primary></indexterm><programlisting>  &quot;can-focus&quot;                <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the item can take the keyboard focus.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GooCanvasItem--description"/>The <literal>&quot;description&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:description</primary></indexterm><programlisting>  &quot;description&quot;              <link linkend="gchararray">gchararray</link>            : Read / Write</programlisting>
<para>A description of the item for use by assistive technologies.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GooCanvasItem--parent"/>The <literal>&quot;parent&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:parent</primary></indexterm><programlisting>  &quot;parent&quot;                   <link linkend="GooCanvasItem">GooCanvasItem</link>         : Read / Write</programlisting>
<para>The parent item.</para></refsect2>
<refsect2><title><anchor id="GooCanvasItem--pointer-events"/>The <literal>&quot;pointer-events&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:pointer-events</primary></indexterm><programlisting>  &quot;pointer-events&quot;           <link linkend="GooCanvasPointerEvents">GooCanvasPointerEvents</link>  : Read / Write</programlisting>
<para>Specifies when the item receives pointer events.</para><para>Default value: GOO_CANVAS_EVENTS_VISIBLE_MASK|GOO_CANVAS_EVENTS_PAINTED_MASK|GOO_CANVAS_EVENTS_FILL_MASK|GOO_CANVAS_EVENTS_STROKE_MASK</para>
</refsect2>
<refsect2><title><anchor id="GooCanvasItem--title"/>The <literal>&quot;title&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:title</primary></indexterm><programlisting>  &quot;title&quot;                    <link linkend="gchararray">gchararray</link>            : Read / Write</programlisting>
<para>A short context-rich description of the item for use by assistive technologies.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GooCanvasItem--tooltip"/>The <literal>&quot;tooltip&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:tooltip</primary></indexterm><programlisting>  &quot;tooltip&quot;                  <link linkend="gchararray">gchararray</link>            : Read / Write</programlisting>
<para>The tooltip to display for the item.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GooCanvasItem--transform"/>The <literal>&quot;transform&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:transform</primary></indexterm><programlisting>  &quot;transform&quot;                <link linkend="GooCairoMatrix">GooCairoMatrix</link>        : Read / Write</programlisting>
<para>The transformation matrix of the item.</para></refsect2>
<refsect2><title><anchor id="GooCanvasItem--visibility"/>The <literal>&quot;visibility&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:visibility</primary></indexterm><programlisting>  &quot;visibility&quot;               <link linkend="GooCanvasItemVisibility">GooCanvasItemVisibility</link>  : Read / Write</programlisting>
<para>When the canvas item is visible.</para><para>Default value: GOO_CANVAS_ITEM_VISIBLE</para>
</refsect2>
<refsect2><title><anchor id="GooCanvasItem--visibility-threshold"/>The <literal>&quot;visibility-threshold&quot;</literal> property</title>
<indexterm><primary>GooCanvasItem:visibility-threshold</primary></indexterm><programlisting>  &quot;visibility-threshold&quot;     <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The scale threshold at which the item becomes visible.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 0</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GooCanvasItem-animation-finished"/>The <literal>&quot;animation-finished&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::animation-finished</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                        <link linkend="gboolean">gboolean</link>       stopped,
                                                        <link linkend="gpointer">gpointer</link>       user_data)      : Run Last</programlisting>
<para>
Emitted when the item animation has finished.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stopped</parameter>&nbsp;:</term>
<listitem><simpara> if the animation was explicitly stopped.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-button-press-event"/>The <literal>&quot;button-press-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::button-press-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link>  *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link>  *target_item,
                                                        <link linkend="GdkEventButton">GdkEventButton</link> *event,
                                                        <link linkend="gpointer">gpointer</link>        user_data)        : Run Last</programlisting>
<para>
Emitted when a mouse button is pressed in an item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data. The x &amp; y fields contain the mouse position
 in the item's coordinate space. The x_root &amp; y_root fields contain
 the same coordinates converted to the canvas coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-button-release-event"/>The <literal>&quot;button-release-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::button-release-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link>  *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link>  *target_item,
                                                        <link linkend="GdkEventButton">GdkEventButton</link> *event,
                                                        <link linkend="gpointer">gpointer</link>        user_data)        : Run Last</programlisting>
<para>
Emitted when a mouse button is released in an item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data. The x &amp; y fields contain the mouse position
 in the item's coordinate space. The x_root &amp; y_root fields contain
 the same coordinates converted to the canvas coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-child-notify"/>The <literal>&quot;child-notify&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::child-notify</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                        <link linkend="GParamSpec">GParamSpec</link>    *pspec,
                                                        <link linkend="gpointer">gpointer</link>       user_data)      : Run First / No Recursion / Has Details / No Hooks</programlisting>
<para>
Emitted for each child property that has changed.
The signal's detail holds the property name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pspec</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GParamSpec"><type>GParamSpec</type></link> of the changed child property.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-enter-notify-event"/>The <literal>&quot;enter-notify-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::enter-notify-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link>    *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link>    *target_item,
                                                        <link linkend="GdkEventCrossing">GdkEventCrossing</link> *event,
                                                        <link linkend="gpointer">gpointer</link>          user_data)        : Run Last</programlisting>
<para>
Emitted when the mouse enters an item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data. The x &amp; y fields contain the mouse position
 in the item's coordinate space. The x_root &amp; y_root fields contain
 the same coordinates converted to the canvas coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-focus-in-event"/>The <literal>&quot;focus-in-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::focus-in-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link> *target_item,
                                                        <link linkend="GdkEventFocus">GdkEventFocus</link> *event,
                                                        <link linkend="gpointer">gpointer</link>       user_data)        : Run Last</programlisting>
<para>
Emitted when the item receives the keyboard focus.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-focus-out-event"/>The <literal>&quot;focus-out-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::focus-out-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link> *target_item,
                                                        <link linkend="GdkEventFocus">GdkEventFocus</link> *event,
                                                        <link linkend="gpointer">gpointer</link>       user_data)        : Run Last</programlisting>
<para>
Emitted when the item loses the keyboard focus.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-grab-broken-event"/>The <literal>&quot;grab-broken-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::grab-broken-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link> *target_item,
                                                        <link linkend="GdkEvent">GdkEvent</link>      *event,
                                                        <link linkend="gpointer">gpointer</link>       user_data)        : Run Last</programlisting>
<para>
Emitted when the item's keyboard or pointer grab was lost
unexpectedly.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-key-press-event"/>The <literal>&quot;key-press-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::key-press-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link> *target_item,
                                                        <link linkend="GdkEventKey">GdkEventKey</link>   *event,
                                                        <link linkend="gpointer">gpointer</link>       user_data)        : Run Last</programlisting>
<para>
Emitted when a key is pressed and the item has the keyboard
focus.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-key-release-event"/>The <literal>&quot;key-release-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::key-release-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link> *target_item,
                                                        <link linkend="GdkEventKey">GdkEventKey</link>   *event,
                                                        <link linkend="gpointer">gpointer</link>       user_data)        : Run Last</programlisting>
<para>
Emitted when a key is released and the item has the keyboard
focus.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-leave-notify-event"/>The <literal>&quot;leave-notify-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::leave-notify-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link>    *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link>    *target_item,
                                                        <link linkend="GdkEventCrossing">GdkEventCrossing</link> *event,
                                                        <link linkend="gpointer">gpointer</link>          user_data)        : Run Last</programlisting>
<para>
Emitted when the mouse leaves an item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data. The x &amp; y fields contain the mouse position
 in the item's coordinate space. The x_root &amp; y_root fields contain
 the same coordinates converted to the canvas coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-motion-notify-event"/>The <literal>&quot;motion-notify-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::motion-notify-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link>  *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link>  *target_item,
                                                        <link linkend="GdkEventMotion">GdkEventMotion</link> *event,
                                                        <link linkend="gpointer">gpointer</link>        user_data)        : Run Last</programlisting>
<para>
Emitted when the mouse moves within an item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data. The x &amp; y fields contain the mouse position
 in the item's coordinate space. The x_root &amp; y_root fields contain
 the same coordinates converted to the canvas coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-query-tooltip"/>The <literal>&quot;query-tooltip&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::query-tooltip</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                        <link linkend="gdouble">gdouble</link>        x,
                                                        <link linkend="gdouble">gdouble</link>        y,
                                                        <link linkend="gboolean">gboolean</link>       keyboard_mode,
                                                        <link linkend="GtkTooltip">GtkTooltip</link>    *tooltip,
                                                        <link linkend="gpointer">gpointer</link>       user_data)          : Run Last</programlisting>
<para>
Emitted when the mouse has paused over the item for a certain amount
of time, or the tooltip was requested via the keyboard.
</para>
<para>
Note that if <parameter>keyboard_mode</parameter> is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, the values of <parameter>x</parameter> and <parameter>y</parameter> are
undefined and should not be used.
</para>
<para>
If the item wants to display a tooltip it should update <parameter>tooltip</parameter>
and return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the mouse.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the mouse.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyboard_mode</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the tooltip was triggered using the keyboard.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTooltip"><type>GtkTooltip</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the item has set a tooltip to show.
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvasItem-scroll-event"/>The <literal>&quot;scroll-event&quot;</literal> signal</title>
<indexterm><primary>GooCanvasItem::scroll-event</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GooCanvasItem">GooCanvasItem</link>  *item,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link>  *target_item,
                                                        <link linkend="GdkEventScroll">GdkEventScroll</link> *event,
                                                        <link linkend="gpointer">gpointer</link>        user_data)        : Run Last</programlisting>
<para>
Emitted when a button in the 4 to 7 range is pressed. Wheel mice are
usually configured to generate button press events for buttons 4 and 5
when the wheel is turned in an item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target_item</parameter>&nbsp;:</term>
<listitem><simpara> the target of the event.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the event data. The x &amp; y fields contain the mouse position
 in the item's coordinate space. The x_root &amp; y_root fields contain
 the same coordinates converted to the canvas coordinate space.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to stop the signal emission, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let it
 continue.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>




<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>

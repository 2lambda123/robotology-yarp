<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="GooCanvas">
<refmeta>
<refentrytitle role="top_of_page">GooCanvas</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOOCANVAS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GooCanvas</refname>
<refpurpose>the main canvas widget.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



                    <link linkend="GooCanvas-struct">GooCanvas</link>;
                    <link linkend="GooCanvasClass">GooCanvasClass</link>;

<link linkend="GtkWidget">GtkWidget</link>*          <link linkend="goo-canvas-new">goo_canvas_new</link>                      (void);

<link linkend="GooCanvasItem">GooCanvasItem</link>*      <link linkend="goo-canvas-get-root-item">goo_canvas_get_root_item</link>            (<link linkend="GooCanvas">GooCanvas</link> *canvas);
<link linkend="void">void</link>                <link linkend="goo-canvas-set-root-item">goo_canvas_set_root_item</link>            (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="GooCanvasItemModel">GooCanvasItemModel</link>* <link linkend="goo-canvas-get-root-item-model">goo_canvas_get_root_item_model</link>      (<link linkend="GooCanvas">GooCanvas</link> *canvas);
<link linkend="void">void</link>                <link linkend="goo-canvas-set-root-item-model">goo_canvas_set_root_item_model</link>      (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);

<link linkend="GooCanvasItem">GooCanvasItem</link>*      <link linkend="goo-canvas-get-static-root-item">goo_canvas_get_static_root_item</link>     (<link linkend="GooCanvas">GooCanvas</link> *canvas);
<link linkend="void">void</link>                <link linkend="goo-canvas-set-static-root-item">goo_canvas_set_static_root_item</link>     (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="GooCanvasItemModel">GooCanvasItemModel</link>* <link linkend="goo-canvas-get-static-root-item-model">goo_canvas_get_static_root_item_model</link>
                                                        (<link linkend="GooCanvas">GooCanvas</link> *canvas);
<link linkend="void">void</link>                <link linkend="goo-canvas-set-static-root-item-model">goo_canvas_set_static_root_item_model</link>
                                                        (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);

<link linkend="void">void</link>                <link linkend="goo-canvas-get-bounds">goo_canvas_get_bounds</link>               (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> *left,
                                                         <link linkend="gdouble">gdouble</link> *top,
                                                         <link linkend="gdouble">gdouble</link> *right,
                                                         <link linkend="gdouble">gdouble</link> *bottom);
<link linkend="void">void</link>                <link linkend="goo-canvas-set-bounds">goo_canvas_set_bounds</link>               (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> left,
                                                         <link linkend="gdouble">gdouble</link> top,
                                                         <link linkend="gdouble">gdouble</link> right,
                                                         <link linkend="gdouble">gdouble</link> bottom);
<link linkend="gdouble">gdouble</link>             <link linkend="goo-canvas-get-scale">goo_canvas_get_scale</link>                (<link linkend="GooCanvas">GooCanvas</link> *canvas);
<link linkend="void">void</link>                <link linkend="goo-canvas-set-scale">goo_canvas_set_scale</link>                (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> scale);

<link linkend="GooCanvasItem">GooCanvasItem</link>*      <link linkend="goo-canvas-get-item">goo_canvas_get_item</link>                 (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);
<link linkend="GooCanvasItem">GooCanvasItem</link>*      <link linkend="goo-canvas-get-item-at">goo_canvas_get_item_at</link>              (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="gboolean">gboolean</link> is_pointer_event);
<link linkend="GList">GList</link>*              <link linkend="goo-canvas-get-items-at">goo_canvas_get_items_at</link>             (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="gboolean">gboolean</link> is_pointer_event);
<link linkend="GList">GList</link>*              <link linkend="goo-canvas-get-items-in-area">goo_canvas_get_items_in_area</link>        (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *area,
                                                         <link linkend="gboolean">gboolean</link> inside_area,
                                                         <link linkend="gboolean">gboolean</link> allow_overlaps,
                                                         <link linkend="gboolean">gboolean</link> include_containers);

<link linkend="void">void</link>                <link linkend="goo-canvas-scroll-to">goo_canvas_scroll_to</link>                (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> left,
                                                         <link linkend="gdouble">gdouble</link> top);
<link linkend="void">void</link>                <link linkend="goo-canvas-render">goo_canvas_render</link>                   (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds,
                                                         <link linkend="gdouble">gdouble</link> scale);

<link linkend="void">void</link>                <link linkend="goo-canvas-convert-to-pixels">goo_canvas_convert_to_pixels</link>        (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y);
<link linkend="void">void</link>                <link linkend="goo-canvas-convert-from-pixels">goo_canvas_convert_from_pixels</link>      (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y);
<link linkend="void">void</link>                <link linkend="goo-canvas-convert-to-item-space">goo_canvas_convert_to_item_space</link>    (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y);
<link linkend="void">void</link>                <link linkend="goo-canvas-convert-from-item-space">goo_canvas_convert_from_item_space</link>  (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y);
<link linkend="void">void</link>                <link linkend="goo-canvas-convert-bounds-to-item-space">goo_canvas_convert_bounds_to_item_space</link>
                                                        (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds);

<link linkend="GdkGrabStatus">GdkGrabStatus</link>       <link linkend="goo-canvas-pointer-grab">goo_canvas_pointer_grab</link>             (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GdkEventMask">GdkEventMask</link> event_mask,
                                                         <link linkend="GdkCursor">GdkCursor</link> *cursor,
                                                         <link linkend="guint32">guint32</link> time);
<link linkend="void">void</link>                <link linkend="goo-canvas-pointer-ungrab">goo_canvas_pointer_ungrab</link>           (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="guint32">guint32</link> time);

<link linkend="void">void</link>                <link linkend="goo-canvas-grab-focus">goo_canvas_grab_focus</link>               (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item);
<link linkend="GdkGrabStatus">GdkGrabStatus</link>       <link linkend="goo-canvas-keyboard-grab">goo_canvas_keyboard_grab</link>            (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gboolean">gboolean</link> owner_events,
                                                         <link linkend="guint32">guint32</link> time);
<link linkend="void">void</link>                <link linkend="goo-canvas-keyboard-ungrab">goo_canvas_keyboard_ungrab</link>          (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="guint32">guint32</link> time);

<link linkend="cairo-t">cairo_t</link>*            <link linkend="goo-canvas-create-cairo-context">goo_canvas_create_cairo_context</link>     (<link linkend="GooCanvas">GooCanvas</link> *canvas);
<link linkend="GooCanvasItem">GooCanvasItem</link>*      <link linkend="goo-canvas-create-item">goo_canvas_create_item</link>              (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);
<link linkend="void">void</link>                <link linkend="goo-canvas-unregister-item">goo_canvas_unregister_item</link>          (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);
<link linkend="void">void</link>                <link linkend="goo-canvas-register-widget-item">goo_canvas_register_widget_item</link>     (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasWidget">GooCanvasWidget</link> *witem);
<link linkend="void">void</link>                <link linkend="goo-canvas-unregister-widget-item">goo_canvas_unregister_widget_item</link>   (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasWidget">GooCanvasWidget</link> *witem);
<link linkend="void">void</link>                <link linkend="goo-canvas-update">goo_canvas_update</link>                   (<link linkend="GooCanvas">GooCanvas</link> *canvas);
<link linkend="void">void</link>                <link linkend="goo-canvas-request-update">goo_canvas_request_update</link>           (<link linkend="GooCanvas">GooCanvas</link> *canvas);
<link linkend="void">void</link>                <link linkend="goo-canvas-request-redraw">goo_canvas_request_redraw</link>           (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds);
<link linkend="void">void</link>                <link linkend="goo-canvas-request-item-redraw">goo_canvas_request_item_redraw</link>      (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds,
                                                         <link linkend="gboolean">gboolean</link> is_static);
<link linkend="gdouble">gdouble</link>             <link linkend="goo-canvas-get-default-line-width">goo_canvas_get_default_line_width</link>   (<link linkend="GooCanvas">GooCanvas</link> *canvas);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----GooCanvas
</synopsis>

</refsect1>



<refsect1 role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GooCanvas implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link> and  <link linkend="GtkBuildable">GtkBuildable</link>.</para>

</refsect1>


<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="GooCanvas--anchor">anchor</link>&quot;                   <link linkend="GtkAnchorType">GtkAnchorType</link>         : Read / Write
  &quot;<link linkend="GooCanvas--automatic-bounds">automatic-bounds</link>&quot;         <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GooCanvas--background-color">background-color</link>&quot;         <link linkend="gchararray">gchararray</link>            : Write
  &quot;<link linkend="GooCanvas--background-color-rgb">background-color-rgb</link>&quot;     <link linkend="guint">guint</link>                 : Write
  &quot;<link linkend="GooCanvas--bounds-from-origin">bounds-from-origin</link>&quot;       <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GooCanvas--bounds-padding">bounds-padding</link>&quot;           <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--clear-background">clear-background</link>&quot;         <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GooCanvas--integer-layout">integer-layout</link>&quot;           <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GooCanvas--redraw-when-scrolled">redraw-when-scrolled</link>&quot;     <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GooCanvas--resolution-x">resolution-x</link>&quot;             <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--resolution-y">resolution-y</link>&quot;             <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--scale">scale</link>&quot;                    <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--scale-x">scale-x</link>&quot;                  <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--scale-y">scale-y</link>&quot;                  <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--units">units</link>&quot;                    <link linkend="GtkUnit">GtkUnit</link>               : Read / Write
  &quot;<link linkend="GooCanvas--x1">x1</link>&quot;                       <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--x2">x2</link>&quot;                       <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--y1">y1</link>&quot;                       <link linkend="gdouble">gdouble</link>               : Read / Write
  &quot;<link linkend="GooCanvas--y2">y2</link>&quot;                       <link linkend="gdouble">gdouble</link>               : Read / Write
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  &quot;<link linkend="GooCanvas-item-created">item-created</link>&quot;                                   : Run Last
  &quot;<link linkend="GooCanvas-set-scroll-adjustments">set-scroll-adjustments</link>&quot;                         : Run Last / Action
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="GooCanvas"><type>GooCanvas</type></link> is the main widget containing a number of canvas items.
</para>
<para>
Here is a simple example:
</para>
<para>
<informalexample><programlisting>
 &num;include &lt;goocanvas.h&gt;
 
 static gboolean on_rect_button_press (GooCanvasItem  *view,
                                       GooCanvasItem  *target,
                                       GdkEventButton *event,
                                       gpointer        data);
 
 int
 main (int argc, char *argv[])
 {
   GtkWidget *window, *scrolled_win, *canvas;
   GooCanvasItem *root, *rect_item, *text_item;
 
   /&ast; Initialize GTK+. &ast;/
   gtk_set_locale&nbsp;();
   gtk_init (&amp;argc, &amp;argv);
 
   /&ast; Create the window and widgets. &ast;/
   window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
   gtk_window_set_default_size (GTK_WINDOW (window), 640, 600);
   gtk_widget_show (window);
   g_signal_connect (window, "delete_event", (GtkSignalFunc) on_delete_event,
                     NULL);
 
   scrolled_win = gtk_scrolled_window_new (NULL, NULL);
   gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolled_win),
                                        GTK_SHADOW_IN);
   gtk_widget_show (scrolled_win);
   gtk_container_add (GTK_CONTAINER (window), scrolled_win);
 
   canvas = goo_canvas_new&nbsp;();
   gtk_widget_set_size_request (canvas, 600, 450);
   goo_canvas_set_bounds (GOO_CANVAS (canvas), 0, 0, 1000, 1000);
   gtk_widget_show (canvas);
   gtk_container_add (GTK_CONTAINER (scrolled_win), canvas);
 
   root = goo_canvas_get_root_item (GOO_CANVAS (canvas));
 
   /&ast; Add a few simple items. &ast;/
   rect_item = goo_canvas_rect_new (root, 100, 100, 400, 400,
                                    "line-width", 10.0,
                                    "radius-x", 20.0,
                                    "radius-y", 10.0,
                                    "stroke-color", "yellow",
                                    "fill-color", "red",
                                    NULL);
 
   text_item = goo_canvas_text_new (root, "Hello World", 300, 300, -1,
                                    GTK_ANCHOR_CENTER,
                                    "font", "Sans 24",
                                    NULL);
   goo_canvas_item_rotate (text_item, 45, 300, 300);
 
   /&ast; Connect a signal handler for the rectangle item. &ast;/
   g_signal_connect (rect_item, "button_press_event",
                     (GtkSignalFunc) on_rect_button_press, NULL);
 
   /&ast; Pass control to the GTK+ main event loop. &ast;/
   gtk_main&nbsp;();
 
   return 0;
 }
 
 
 /&ast; This handles button presses in item views. We simply output a message to
    the console. &ast;/
 static gboolean
 on_rect_button_press (GooCanvasItem  *item,
                       GooCanvasItem  *target,
                       GdkEventButton *event,
                       gpointer        data)
 {
   g_print ("rect item received button press event\n");
   return TRUE;
 }
 
</programlisting></informalexample></para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GooCanvas-struct" role="struct"/>GooCanvas</title>
<indexterm><primary>GooCanvas</primary></indexterm><programlisting>typedef struct _GooCanvas GooCanvas;</programlisting>
<para>
The <link linkend="GooCanvas-struct"><type>GooCanvas</type></link> struct contains private data only.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GooCanvasClass" role="struct"/>GooCanvasClass</title>
<indexterm><primary>GooCanvasClass</primary></indexterm><programlisting>typedef struct {
  GooCanvasItem* (* create_item)	    (GooCanvas          *canvas,
					     GooCanvasItemModel *model);

  /* Signals. */
  void           (* item_created)	    (GooCanvas          *canvas,
					     GooCanvasItem      *item,
					     GooCanvasItemModel *model);
} GooCanvasClass;
</programlisting>
<para>
The <link linkend="GooCanvasClass-struct"><type>GooCanvasClass</type></link> struct contains one virtual method that
subclasses may override.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><structfield>create_item</structfield>&nbsp;()</term>
<listitem><simpara> a virtual method that subclasses may override to create custom
 canvas items for item models.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><structfield>item_created</structfield>&nbsp;()</term>
<listitem><simpara> signal emitted when a new canvas item has been created.
 Applications can connect to this to setup signal handlers for the new item.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-new" role="function"/>goo_canvas_new ()</title>
<indexterm><primary>goo_canvas_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*          goo_canvas_new                      (void);</programlisting>
<para>
Creates a new <link linkend="GooCanvas"><type>GooCanvas</type></link> widget.
</para>
<para>
A <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link> is created automatically as the root item of the canvas,
though this can be overriden with <link linkend="goo-canvas-set-root-item"><function>goo_canvas_set_root_item()</function></link> or
<link linkend="goo-canvas-set-root-item-model"><function>goo_canvas_set_root_item_model()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GooCanvas"><type>GooCanvas</type></link> widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-root-item" role="function"/>goo_canvas_get_root_item ()</title>
<indexterm><primary>goo_canvas_get_root_item</primary></indexterm><programlisting><link linkend="GooCanvasItem">GooCanvasItem</link>*      goo_canvas_get_root_item            (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
Gets the root item of the canvas, usually a <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the root item, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if there is no root item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-set-root-item" role="function"/>goo_canvas_set_root_item ()</title>
<indexterm><primary>goo_canvas_set_root_item</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_set_root_item            (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Sets the root item of the canvas. Any existing canvas items are removed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the root canvas item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-root-item-model" role="function"/>goo_canvas_get_root_item_model ()</title>
<indexterm><primary>goo_canvas_get_root_item_model</primary></indexterm><programlisting><link linkend="GooCanvasItemModel">GooCanvasItemModel</link>* goo_canvas_get_root_item_model      (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
Gets the root item model of the canvas.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the root item model, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if there is no root item model.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-set-root-item-model" role="function"/>goo_canvas_set_root_item_model ()</title>
<indexterm><primary>goo_canvas_set_root_item_model</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_set_root_item_model      (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);</programlisting>
<para>
Sets the root item model of the canvas.
</para>
<para>
A hierarchy of canvas items will be created, corresponding to the hierarchy
of items in the model. Any current canvas items will be removed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItemModel"><type>GooCanvasItemModel</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-static-root-item" role="function"/>goo_canvas_get_static_root_item ()</title>
<indexterm><primary>goo_canvas_get_static_root_item</primary></indexterm><programlisting><link linkend="GooCanvasItem">GooCanvasItem</link>*      goo_canvas_get_static_root_item     (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
Gets the static root item of the canvas.
</para>
<para>
Static items are exactly the same as ordinary canvas items, except that
they do not move or change size when the canvas is scrolled or the scale
changes.
</para>
<para>
Static items are added to the static root item in exactly the same way that
ordinary items are added to the root item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the static root item, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-set-static-root-item" role="function"/>goo_canvas_set_static_root_item ()</title>
<indexterm><primary>goo_canvas_set_static_root_item</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_set_static_root_item     (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Sets the static root item. Any existing static items are removed.
</para>
<para>
Static items are exactly the same as ordinary canvas items, except that
they do not move or change size when the canvas is scrolled or the scale
changes.
</para>
<para>
Static items are added to the static root item in exactly the same way that
ordinary items are added to the root item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the static root item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-static-root-item-model" role="function"/>goo_canvas_get_static_root_item_model ()</title>
<indexterm><primary>goo_canvas_get_static_root_item_model</primary></indexterm><programlisting><link linkend="GooCanvasItemModel">GooCanvasItemModel</link>* goo_canvas_get_static_root_item_model
                                                        (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
Gets the static root item model of the canvas.
</para>
<para>
Static item models are exactly the same as ordinary item models, except that
the corresponding items do not move or change size when the canvas is
scrolled or the scale changes.
</para>
<para>
Static items models are added to the static root item model in exactly the
same way that ordinary item models are added to the root item model.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the static root item model, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-set-static-root-item-model" role="function"/>goo_canvas_set_static_root_item_model ()</title>
<indexterm><primary>goo_canvas_set_static_root_item_model</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_set_static_root_item_model
                                                        (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);</programlisting>
<para>
Sets the static root item model. Any existing static item models are
removed.
</para>
<para>
Static item models are exactly the same as ordinary item models, except that
the corresponding items do not move or change size when the canvas is
scrolled or the scale changes.
</para>
<para>
Static items models are added to the static root item model in exactly the
same way that ordinary item models are added to the root item model.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> the static root item model.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-bounds" role="function"/>goo_canvas_get_bounds ()</title>
<indexterm><primary>goo_canvas_get_bounds</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_get_bounds               (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> *left,
                                                         <link linkend="gdouble">gdouble</link> *top,
                                                         <link linkend="gdouble">gdouble</link> *right,
                                                         <link linkend="gdouble">gdouble</link> *bottom);</programlisting>
<para>
Gets the bounds of the canvas, in canvas units.
</para>
<para>
By default, canvas units are pixels, though the <link linkend="GooCanvas--units"><type>"units"</type></link> property
can be used to change the units to points, inches or millimeters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>left</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="gdouble"><type>gdouble</type></link> to return the left edge, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>top</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="gdouble"><type>gdouble</type></link> to return the top edge, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>right</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="gdouble"><type>gdouble</type></link> to return the right edge, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bottom</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="gdouble"><type>gdouble</type></link> to return the bottom edge, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-set-bounds" role="function"/>goo_canvas_set_bounds ()</title>
<indexterm><primary>goo_canvas_set_bounds</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_set_bounds               (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> left,
                                                         <link linkend="gdouble">gdouble</link> top,
                                                         <link linkend="gdouble">gdouble</link> right,
                                                         <link linkend="gdouble">gdouble</link> bottom);</programlisting>
<para>
Sets the bounds of the <link linkend="GooCanvas"><type>GooCanvas</type></link>, in canvas units.
</para>
<para>
By default, canvas units are pixels, though the <link linkend="GooCanvas--units"><type>"units"</type></link> property
can be used to change the units to points, inches or millimeters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>left</parameter>&nbsp;:</term>
<listitem><simpara> the left edge.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>top</parameter>&nbsp;:</term>
<listitem><simpara> the top edge.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>right</parameter>&nbsp;:</term>
<listitem><simpara> the right edge.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bottom</parameter>&nbsp;:</term>
<listitem><simpara> the bottom edge.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-scale" role="function"/>goo_canvas_get_scale ()</title>
<indexterm><primary>goo_canvas_get_scale</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             goo_canvas_get_scale                (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
Gets the current scale of the canvas.
</para>
<para>
The scale specifies the magnification factor of the canvas, e.g. if an item
has a width of 2 pixels and the scale is set to 3, it will be displayed with
a width of 2 x 3 = 6 pixels.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the current scale setting.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-set-scale" role="function"/>goo_canvas_set_scale ()</title>
<indexterm><primary>goo_canvas_set_scale</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_set_scale                (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> scale);</programlisting>
<para>
Sets the scale of the canvas.
</para>
<para>
The scale specifies the magnification factor of the canvas, e.g. if an item
has a width of 2 pixels and the scale is set to 3, it will be displayed with
a width of 2 x 3 = 6 pixels.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara> the new scale setting.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-item" role="function"/>goo_canvas_get_item ()</title>
<indexterm><primary>goo_canvas_get_item</primary></indexterm><programlisting><link linkend="GooCanvasItem">GooCanvasItem</link>*      goo_canvas_get_item                 (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);</programlisting>
<para>
Gets the canvas item associated with the given <link linkend="GooCanvasItemModel"><type>GooCanvasItemModel</type></link>.
This is only useful when <link linkend="goo-canvas-set-root-item-model"><function>goo_canvas_set_root_item_model()</function></link> has been used to
set a model for the canvas.
</para>
<para>
For simple applications you can use <link linkend="goo-canvas-get-item"><function>goo_canvas_get_item()</function></link> to set up
signal handlers for your items, e.g.
</para>
<para>
<informalexample><programlisting>
   item = goo_canvas_get_item (GOO_CANVAS (canvas), my_item);
   g_signal_connect (item, "button_press_event",
                     (GtkSignalFunc) on_my_item_button_press, NULL);
</programlisting></informalexample>
</para>
<para>
More complex applications may want to use the <link linkend="GooCanvas-item-created"><type>"item-created"</type></link>
signal to hook up their signal handlers.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItemModel"><type>GooCanvasItemModel</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the canvas item corresponding to the given <link linkend="GooCanvasItemModel"><type>GooCanvasItemModel</type></link>,
 or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no canvas item has been created for it yet.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-item-at" role="function"/>goo_canvas_get_item_at ()</title>
<indexterm><primary>goo_canvas_get_item_at</primary></indexterm><programlisting><link linkend="GooCanvasItem">GooCanvasItem</link>*      goo_canvas_get_item_at              (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="gboolean">gboolean</link> is_pointer_event);</programlisting>
<para>
Gets the item at the given point.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the point.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the point
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_pointer_event</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the "pointer-events" property of
 items should be used to determine which parts of the item are tested.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the item found at the given point, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no item was found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-items-at" role="function"/>goo_canvas_get_items_at ()</title>
<indexterm><primary>goo_canvas_get_items_at</primary></indexterm><programlisting><link linkend="GList">GList</link>*              goo_canvas_get_items_at             (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> x,
                                                         <link linkend="gdouble">gdouble</link> y,
                                                         <link linkend="gboolean">gboolean</link> is_pointer_event);</programlisting>
<para>
Gets all items at the given point.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate of the point.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate of the point
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_pointer_event</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the "pointer-events" property of
 items should be used to determine which parts of the item are tested.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a list of items found at the given point, with the top item at
 the start of the list, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no items were found. The list must be
 freed with <link linkend="g-list-free"><function>g_list_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-items-in-area" role="function"/>goo_canvas_get_items_in_area ()</title>
<indexterm><primary>goo_canvas_get_items_in_area</primary></indexterm><programlisting><link linkend="GList">GList</link>*              goo_canvas_get_items_in_area        (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *area,
                                                         <link linkend="gboolean">gboolean</link> inside_area,
                                                         <link linkend="gboolean">gboolean</link> allow_overlaps,
                                                         <link linkend="gboolean">gboolean</link> include_containers);</programlisting>
<para>
Gets a list of items inside or outside a given area.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>area</parameter>&nbsp;:</term>
<listitem><simpara> the area to compare with each item's bounds.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inside_area</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if items inside <parameter>area</parameter> should be returned, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if
 items outside <parameter>area</parameter> should be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>allow_overlaps</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if items which are partly inside and partly outside
 should be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>include_containers</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if containers should be checked as well as
 normal items.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a list of items in the given area, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no items are found.
 The list should be freed with <link linkend="g-list-free"><function>g_list_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-scroll-to" role="function"/>goo_canvas_scroll_to ()</title>
<indexterm><primary>goo_canvas_scroll_to</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_scroll_to                (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> left,
                                                         <link linkend="gdouble">gdouble</link> top);</programlisting>
<para>
Scrolls the canvas, placing the given point as close to the top-left of
the view as possible.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>left</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate to scroll to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>top</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate to scroll to.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-render" role="function"/>goo_canvas_render ()</title>
<indexterm><primary>goo_canvas_render</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_render                   (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds,
                                                         <link linkend="gdouble">gdouble</link> scale);</programlisting>
<para>
Renders all or part of a canvas to the given cairo context.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&nbsp;:</term>
<listitem><simpara> a cairo context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bounds</parameter>&nbsp;:</term>
<listitem><simpara> the area to render, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to render the entire canvas.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scale</parameter>&nbsp;:</term>
<listitem><simpara> the scale to compare with each item's visibility
threshold to see if they should be rendered. This only affects items that
have their visibility set to <link linkend="GOO-CANVAS-ITEM-VISIBLE-ABOVE-THRESHOLD:CAPS"><literal>GOO_CANVAS_ITEM_VISIBLE_ABOVE_THRESHOLD</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-convert-to-pixels" role="function"/>goo_canvas_convert_to_pixels ()</title>
<indexterm><primary>goo_canvas_convert_to_pixels</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_convert_to_pixels        (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y);</programlisting>
<para>
Converts a coordinate from the canvas coordinate space to pixels.
</para>
<para>
The canvas coordinate space is specified in the call to
<link linkend="goo-canvas-set-bounds"><function>goo_canvas_set_bounds()</function></link>.
</para>
<para>
The pixel coordinate space specifies pixels from the top-left of the entire
canvas window, according to the current scale setting.
See <link linkend="goo-canvas-set-scale"><function>goo_canvas_set_scale()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the x coordinate to convert.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the y coordinate to convert.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-convert-from-pixels" role="function"/>goo_canvas_convert_from_pixels ()</title>
<indexterm><primary>goo_canvas_convert_from_pixels</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_convert_from_pixels      (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y);</programlisting>
<para>
Converts a coordinate from pixels to the canvas coordinate space.
</para>
<para>
The pixel coordinate space specifies pixels from the top-left of the entire
canvas window, according to the current scale setting.
See <link linkend="goo-canvas-set-scale"><function>goo_canvas_set_scale()</function></link>.
</para>
<para>
The canvas coordinate space is specified in the call to
<link linkend="goo-canvas-set-bounds"><function>goo_canvas_set_bounds()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the x coordinate to convert.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the y coordinate to convert.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-convert-to-item-space" role="function"/>goo_canvas_convert_to_item_space ()</title>
<indexterm><primary>goo_canvas_convert_to_item_space</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_convert_to_item_space    (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y);</programlisting>
<para>
Converts a coordinate from the canvas coordinate space to the given
item's coordinate space, applying all transformation matrices including the
item's own transformation matrix, if it has one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the x coordinate to convert.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the y coordinate to convert.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-convert-from-item-space" role="function"/>goo_canvas_convert_from_item_space ()</title>
<indexterm><primary>goo_canvas_convert_from_item_space</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_convert_from_item_space  (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gdouble">gdouble</link> *x,
                                                         <link linkend="gdouble">gdouble</link> *y);</programlisting>
<para>
Converts a coordinate from the given item's coordinate space to the canvas
coordinate space, applying all transformation matrices including the
item's own transformation matrix, if it has one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the x coordinate to convert.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the y coordinate to convert.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-convert-bounds-to-item-space" role="function"/>goo_canvas_convert_bounds_to_item_space ()</title>
<indexterm><primary>goo_canvas_convert_bounds_to_item_space</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_convert_bounds_to_item_space
                                                        (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds);</programlisting>
<para>
Converts the given bounds in the canvas coordinate space to a bounding box
in item space. This is useful in the item <link linkend="paint"><function>paint()</function></link> methods to convert the
bounds to be painted to the item's coordinate space.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bounds</parameter>&nbsp;:</term>
<listitem><simpara> the bounds in canvas coordinate space, to be converted.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-pointer-grab" role="function"/>goo_canvas_pointer_grab ()</title>
<indexterm><primary>goo_canvas_pointer_grab</primary></indexterm><programlisting><link linkend="GdkGrabStatus">GdkGrabStatus</link>       goo_canvas_pointer_grab             (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="GdkEventMask">GdkEventMask</link> event_mask,
                                                         <link linkend="GdkCursor">GdkCursor</link> *cursor,
                                                         <link linkend="guint32">guint32</link> time);</programlisting>
<para>
Attempts to grab the pointer for the given item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item to grab the pointer for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event_mask</parameter>&nbsp;:</term>
<listitem><simpara> the events to receive during the grab.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cursor</parameter>&nbsp;:</term>
<listitem><simpara> the cursor to display during the grab, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>time</parameter>&nbsp;:</term>
<listitem><simpara> the time of the event that lead to the pointer grab. This should
 come from the relevant <link linkend="GdkEvent"><type>GdkEvent</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="GDK-GRAB-SUCCESS:CAPS"><literal>GDK_GRAB_SUCCESS</literal></link> if the grab succeeded.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-pointer-ungrab" role="function"/>goo_canvas_pointer_ungrab ()</title>
<indexterm><primary>goo_canvas_pointer_ungrab</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_pointer_ungrab           (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="guint32">guint32</link> time);</programlisting>
<para>
Ungrabs the pointer, if the given item has the pointer grab.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that has the grab.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>time</parameter>&nbsp;:</term>
<listitem><simpara> the time of the event that lead to the pointer ungrab. This should
 come from the relevant <link linkend="GdkEvent"><type>GdkEvent</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-grab-focus" role="function"/>goo_canvas_grab_focus ()</title>
<indexterm><primary>goo_canvas_grab_focus</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_grab_focus               (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item);</programlisting>
<para>
Grabs the keyboard focus for the given item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item to grab the focus.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-keyboard-grab" role="function"/>goo_canvas_keyboard_grab ()</title>
<indexterm><primary>goo_canvas_keyboard_grab</primary></indexterm><programlisting><link linkend="GdkGrabStatus">GdkGrabStatus</link>       goo_canvas_keyboard_grab            (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="gboolean">gboolean</link> owner_events,
                                                         <link linkend="guint32">guint32</link> time);</programlisting>
<para>
Attempts to grab the keyboard for the given item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item to grab the keyboard for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>owner_events</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if keyboard events for this application will be
 reported normally, or <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if all keyboard events will be reported with
 respect to the grab item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>time</parameter>&nbsp;:</term>
<listitem><simpara> the time of the event that lead to the keyboard grab. This should
 come from the relevant <link linkend="GdkEvent"><type>GdkEvent</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="GDK-GRAB-SUCCESS:CAPS"><literal>GDK_GRAB_SUCCESS</literal></link> if the grab succeeded.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-keyboard-ungrab" role="function"/>goo_canvas_keyboard_ungrab ()</title>
<indexterm><primary>goo_canvas_keyboard_ungrab</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_keyboard_ungrab          (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItem">GooCanvasItem</link> *item,
                                                         <link linkend="guint32">guint32</link> time);</programlisting>
<para>
Ungrabs the keyboard, if the given item has the keyboard grab.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the item that has the keyboard grab.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>time</parameter>&nbsp;:</term>
<listitem><simpara> the time of the event that lead to the keyboard ungrab. This should
 come from the relevant <link linkend="GdkEvent"><type>GdkEvent</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-create-cairo-context" role="function"/>goo_canvas_create_cairo_context ()</title>
<indexterm><primary>goo_canvas_create_cairo_context</primary></indexterm><programlisting><link linkend="cairo-t">cairo_t</link>*            goo_canvas_create_cairo_context     (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
Creates a cairo context, initialized with the default canvas settings.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new cairo context. It should be freed with <link linkend="cairo-destroy"><function>cairo_destroy()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-create-item" role="function"/>goo_canvas_create_item ()</title>
<indexterm><primary>goo_canvas_create_item</primary></indexterm><programlisting><link linkend="GooCanvasItem">GooCanvasItem</link>*      goo_canvas_create_item              (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items, typically container items such as <link linkend="GooCanvasGroup"><type>GooCanvasGroup</type></link>.
</para>
<para>
It creates a new canvas item for the given item model, and recursively
creates items for any children.
</para>
<para>
It uses the <link linkend="create-item"><function>create_item()</function></link> virtual method if it has been set.
Subclasses of <link linkend="GooCanvas"><type>GooCanvas</type></link> can define this method if they want to use
custom views for items.
</para>
<para>
It emits the <link linkend="GooCanvas-item-created"><type>"item-created"</type></link> signal after creating the view, so
application code can connect signal handlers to the new view if desired.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> the item model to create a canvas item for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new canvas item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-unregister-item" role="function"/>goo_canvas_unregister_item ()</title>
<indexterm><primary>goo_canvas_unregister_item</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_unregister_item          (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model);</programlisting>
<para>
This function is only intended to be used when implementing new canvas
items.
</para>
<para>
It should be called in the finalize method of <link linkend="GooCanvasItem"><type>GooCanvasItem</type></link>
objects, to remove the canvas item from the <link linkend="GooCanvas"><type>GooCanvas</type></link>'s hash table.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> the item model whose canvas item is being finalized.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-register-widget-item" role="function"/>goo_canvas_register_widget_item ()</title>
<indexterm><primary>goo_canvas_register_widget_item</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_register_widget_item     (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasWidget">GooCanvasWidget</link> *witem);</programlisting>
<para>
This function should only be used by <link linkend="GooCanvasWidget"><type>GooCanvasWidget</type></link> and subclass
implementations.
</para>
<para>
It registers a widget item with the canvas, so that the canvas can do the
necessary actions to move and resize the widget as needed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>witem</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasWidget"><type>GooCanvasWidget</type></link> item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-unregister-widget-item" role="function"/>goo_canvas_unregister_widget_item ()</title>
<indexterm><primary>goo_canvas_unregister_widget_item</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_unregister_widget_item   (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         <link linkend="GooCanvasWidget">GooCanvasWidget</link> *witem);</programlisting>
<para>
This function should only be used by <link linkend="GooCanvasWidget"><type>GooCanvasWidget</type></link> and subclass
implementations.
</para>
<para>
It unregisters a widget item from the canvas, when the item is no longer in
the canvas.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>witem</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvasWidget"><type>GooCanvasWidget</type></link> item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-update" role="function"/>goo_canvas_update ()</title>
<indexterm><primary>goo_canvas_update</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_update                   (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
This function is only intended to be used by subclasses of <link linkend="GooCanvas"><type>GooCanvas</type></link> or
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> implementations.
</para>
<para>
It updates any items that need updating.
</para>
<para>
If the bounds of items change, they will request a redraw of the old and
new bounds so the display is updated correctly.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-request-update" role="function"/>goo_canvas_request_update ()</title>
<indexterm><primary>goo_canvas_request_update</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_request_update           (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
This function is only intended to be used by subclasses of <link linkend="GooCanvas"><type>GooCanvas</type></link> or
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> implementations.
</para>
<para>
It schedules an update of the <link linkend="GooCanvas"><type>GooCanvas</type></link>. This will be performed in
the idle loop, after all pending events have been handled, but before
the canvas has been repainted.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-request-redraw" role="function"/>goo_canvas_request_redraw ()</title>
<indexterm><primary>goo_canvas_request_redraw</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_request_redraw           (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds);</programlisting>
<para>
This function is only intended to be used by subclasses of <link linkend="GooCanvas"><type>GooCanvas</type></link> or
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> implementations.
</para>
<para>
Requests that the given bounds be redrawn. The bounds must be in the canvas
coordinate space.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bounds</parameter>&nbsp;:</term>
<listitem><simpara> the bounds to redraw, in device space.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-request-item-redraw" role="function"/>goo_canvas_request_item_redraw ()</title>
<indexterm><primary>goo_canvas_request_item_redraw</primary></indexterm><programlisting><link linkend="void">void</link>                goo_canvas_request_item_redraw      (<link linkend="GooCanvas">GooCanvas</link> *canvas,
                                                         const <link linkend="GooCanvasBounds">GooCanvasBounds</link> *bounds,
                                                         <link linkend="gboolean">gboolean</link> is_static);</programlisting>
<para>
This function is only intended to be used by subclasses of <link linkend="GooCanvas"><type>GooCanvas</type></link> or
<link linkend="GooCanvasItem"><type>GooCanvasItem</type></link> implementations.
</para>
<para>
Requests that the given bounds be redrawn. If <parameter>is_static</parameter> is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> the bounds
are assumed to be in the static item coordinate space, otherwise they are
assumed to be in the canvas coordinate space.
</para>
<para>
If <parameter>is_static</parameter> is <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> this function behaves the same as
<link linkend="goo-canvas-request-redraw"><function>goo_canvas_request_redraw()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bounds</parameter>&nbsp;:</term>
<listitem><simpara> the bounds of the item to redraw.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_static</parameter>&nbsp;:</term>
<listitem><simpara> if the item is static.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="goo-canvas-get-default-line-width" role="function"/>goo_canvas_get_default_line_width ()</title>
<indexterm><primary>goo_canvas_get_default_line_width</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             goo_canvas_get_default_line_width   (<link linkend="GooCanvas">GooCanvas</link> *canvas);</programlisting>
<para>
Gets the default line width, which depends on the current units setting.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GooCanvas"><type>GooCanvas</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the default line width of the canvas.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GooCanvas--anchor"/>The <literal>&quot;anchor&quot;</literal> property</title>
<indexterm><primary>GooCanvas:anchor</primary></indexterm><programlisting>  &quot;anchor&quot;                   <link linkend="GtkAnchorType">GtkAnchorType</link>         : Read / Write</programlisting>
<para>Where to place the canvas when it is smaller than the widget's allocated area.</para><para>Default value: GTK_ANCHOR_NORTH_WEST</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--automatic-bounds"/>The <literal>&quot;automatic-bounds&quot;</literal> property</title>
<indexterm><primary>GooCanvas:automatic-bounds</primary></indexterm><programlisting>  &quot;automatic-bounds&quot;         <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the bounds are automatically calculated based on the bounds of all the items in the canvas.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--background-color"/>The <literal>&quot;background-color&quot;</literal> property</title>
<indexterm><primary>GooCanvas:background-color</primary></indexterm><programlisting>  &quot;background-color&quot;         <link linkend="gchararray">gchararray</link>            : Write</programlisting>
<para>The color to use for the canvas background.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--background-color-rgb"/>The <literal>&quot;background-color-rgb&quot;</literal> property</title>
<indexterm><primary>GooCanvas:background-color-rgb</primary></indexterm><programlisting>  &quot;background-color-rgb&quot;     <link linkend="guint">guint</link>                 : Write</programlisting>
<para>The color to use for the canvas background, specified as a 24-bit integer value, 0xRRGGBB.</para><para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--bounds-from-origin"/>The <literal>&quot;bounds-from-origin&quot;</literal> property</title>
<indexterm><primary>GooCanvas:bounds-from-origin</primary></indexterm><programlisting>  &quot;bounds-from-origin&quot;       <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the automatic bounds are calculated from the origin.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--bounds-padding"/>The <literal>&quot;bounds-padding&quot;</literal> property</title>
<indexterm><primary>GooCanvas:bounds-padding</primary></indexterm><programlisting>  &quot;bounds-padding&quot;           <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The padding added to the automatic bounds.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--clear-background"/>The <literal>&quot;clear-background&quot;</literal> property</title>
<indexterm><primary>GooCanvas:clear-background</primary></indexterm><programlisting>  &quot;clear-background&quot;         <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the background is cleared before the canvas is painted.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--integer-layout"/>The <literal>&quot;integer-layout&quot;</literal> property</title>
<indexterm><primary>GooCanvas:integer-layout</primary></indexterm><programlisting>  &quot;integer-layout&quot;           <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If all item layout is done to the nearest integer.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--redraw-when-scrolled"/>The <literal>&quot;redraw-when-scrolled&quot;</literal> property</title>
<indexterm><primary>GooCanvas:redraw-when-scrolled</primary></indexterm><programlisting>  &quot;redraw-when-scrolled&quot;     <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>If the canvas is completely redrawn when scrolled, to reduce the flicker of static items.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--resolution-x"/>The <literal>&quot;resolution-x&quot;</literal> property</title>
<indexterm><primary>GooCanvas:resolution-x</primary></indexterm><programlisting>  &quot;resolution-x&quot;             <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The horizontal resolution of the display, in dots per inch.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 96</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--resolution-y"/>The <literal>&quot;resolution-y&quot;</literal> property</title>
<indexterm><primary>GooCanvas:resolution-y</primary></indexterm><programlisting>  &quot;resolution-y&quot;             <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The vertical resolution of the display, in dots per inch.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 96</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--scale"/>The <literal>&quot;scale&quot;</literal> property</title>
<indexterm><primary>GooCanvas:scale</primary></indexterm><programlisting>  &quot;scale&quot;                    <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The magnification factor of the canvas.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 1</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--scale-x"/>The <literal>&quot;scale-x&quot;</literal> property</title>
<indexterm><primary>GooCanvas:scale-x</primary></indexterm><programlisting>  &quot;scale-x&quot;                  <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The horizontal magnification factor of the canvas.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 1</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--scale-y"/>The <literal>&quot;scale-y&quot;</literal> property</title>
<indexterm><primary>GooCanvas:scale-y</primary></indexterm><programlisting>  &quot;scale-y&quot;                  <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The vertical magnification factor of the canvas.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 1</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--units"/>The <literal>&quot;units&quot;</literal> property</title>
<indexterm><primary>GooCanvas:units</primary></indexterm><programlisting>  &quot;units&quot;                    <link linkend="GtkUnit">GtkUnit</link>               : Read / Write</programlisting>
<para>The units to use for the canvas.</para><para>Default value: GTK_UNIT_PIXEL</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--x1"/>The <literal>&quot;x1&quot;</literal> property</title>
<indexterm><primary>GooCanvas:x1</primary></indexterm><programlisting>  &quot;x1&quot;                       <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The x coordinate of the left edge of the canvas bounds, in canvas units.</para><para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--x2"/>The <literal>&quot;x2&quot;</literal> property</title>
<indexterm><primary>GooCanvas:x2</primary></indexterm><programlisting>  &quot;x2&quot;                       <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The x coordinate of the right edge of the canvas bounds, in canvas units.</para><para>Default value: 1000</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--y1"/>The <literal>&quot;y1&quot;</literal> property</title>
<indexterm><primary>GooCanvas:y1</primary></indexterm><programlisting>  &quot;y1&quot;                       <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The y coordinate of the top edge of the canvas bounds, in canvas units.</para><para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GooCanvas--y2"/>The <literal>&quot;y2&quot;</literal> property</title>
<indexterm><primary>GooCanvas:y2</primary></indexterm><programlisting>  &quot;y2&quot;                       <link linkend="gdouble">gdouble</link>               : Read / Write</programlisting>
<para>The y coordinate of the bottom edge of the canvas bounds, in canvas units.</para><para>Default value: 1000</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GooCanvas-item-created"/>The <literal>&quot;item-created&quot;</literal> signal</title>
<indexterm><primary>GooCanvas::item-created</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GooCanvas">GooCanvas</link>          *canvas,
                                                        <link linkend="GooCanvasItem">GooCanvasItem</link>      *item,
                                                        <link linkend="GooCanvasItemModel">GooCanvasItemModel</link> *model,
                                                        <link linkend="gpointer">gpointer</link>            user_data)      : Run Last</programlisting>
<para>
This is emitted when a new canvas item is created, in model/view mode.
</para>
<para>
Applications can set up signal handlers for the new items here.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> the canvas.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the new item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model</parameter>&nbsp;:</term>
<listitem><simpara> the item's model.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GooCanvas-set-scroll-adjustments"/>The <literal>&quot;set-scroll-adjustments&quot;</literal> signal</title>
<indexterm><primary>GooCanvas::set-scroll-adjustments</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GooCanvas">GooCanvas</link>     *canvas,
                                                        <link linkend="GtkAdjustment">GtkAdjustment</link> *hadjustment,
                                                        <link linkend="GtkAdjustment">GtkAdjustment</link> *vadjustment,
                                                        <link linkend="gpointer">gpointer</link>       user_data)        : Run Last / Action</programlisting>
<para>
This is used when the <link linkend="GooCanvas"><type>GooCanvas</type></link> is placed inside a <link linkend="GtkScrolledWindow"><type>GtkScrolledWindow</type></link>,
to connect up the adjustments so scrolling works properly.
</para>
<para>
It isn't useful for applications.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>canvas</parameter>&nbsp;:</term>
<listitem><simpara> the canvas.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hadjustment</parameter>&nbsp;:</term>
<listitem><simpara> the horizontal adjustment.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vadjustment</parameter>&nbsp;:</term>
<listitem><simpara> the vertical adjustment.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>




<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>

// -*- mode:C++; tab-width:4; c-basic-offset:4; indent-tabs-mode:nil -*-

#include <yarp/dev/Drivers.h>
#include <yarp/String.h>
#include <yarp/Logger.h>
#include <yarp/os/Bottle.h>

#include <ace/OS.h>

using namespace yarp;
using namespace yarp::os;
using namespace yarp::dev;



// this is an automatically configured file
#cmakedefine ENABLE_dragonfly
#cmakedefine ENABLE_esdMotionControl
#cmakedefine ENABLE_microphone
#cmakedefine ENABLE_inertiacube2
#cmakedefine ENABLE_james
#cmakedefine ENABLE_XSensMTx
#cmakedefine ENABLE_portaudio

// add header file here, cmakedefine line above (in PopulateDrivers.cpp.in),
// and factory code below
#ifdef ENABLE_dragonfly
#include <yarp/DragonflyDeviceDriver.h>
#endif

#ifdef ENABLE_esdMotionControl
#include <yarp/EsdMotionControl.h>
#include <yarp/EsdMessageSniffer.h>
#endif

#ifdef ENABLE_microphone
#include <yarp/MicrophoneDeviceDriver.h>
#endif

#ifdef ENABLE_inertiacube2
#include <yarp/InertiaCube2.h>
#endif

#ifdef ENABLE_james
#include <yarp/JamesArmCalibrator.h>
// more components might show up here
#endif

#ifdef ENABLE_XSensMTx
#include <yarp/XSensMTx.h>
#endif

#ifdef ENABLE_portaudio
#include <yarp/PortAudioDeviceDriver.h>
#endif

#include <yarp/dev/RemoteFrameGrabber.h>
#include <yarp/dev/ServerFrameGrabber.h>
#include <yarp/dev/ServerInertial.h>
#include <yarp/dev/TestFrameGrabber.h>

extern DriverCreator *createRemoteControlBoard();
extern DriverCreator *createServerControlBoard();


void Drivers::init() {
#ifdef ENABLE_dragonfly
    add(new DriverCreatorOf<DragonflyDeviceDriver>("dragonfly",
                                                   "grabber",
                                                   "DragonflyDeviceDriver"));
#endif

#ifdef ENABLE_esdMotionControl
    add(new DriverCreatorOf<EsdMotionControl>("esd",
                                              "controlboard",
                                              "EsdMotionControl"));
    add(new DriverCreatorOf<EsdMessageSniffer>("esd_sniffer",
                                              "",
                                              "EsdMessageSniffer"));
#endif

#ifdef ENABLE_microphone
    add(new DriverCreatorOf<MicrophoneDeviceDriver>("microphone",
                                                    "grabber",
                                                    "MicrophoneDeviceDriver"));
#endif

#ifdef ENABLE_inertiacube2
    add(new DriverCreatorOf<InertiaCube2>("inertiacube2", 
                                          "",
                                          "InertiaCube2"));
#endif

#ifdef ENABLE_james
    add(new DriverCreatorOf<JamesArmCalibrator>("jamesarmcalibrator", 
                                             "",
                                             "JamesArmCalibrator"));
#endif

#ifdef ENABLE_XSensMTx
    add(new DriverCreatorOf<XSensMTx>("XSensMTx", 
                                          "inertial",
                                          "XSensMTx"));
#endif

#ifdef ENABLE_portaudio
    add(new DriverCreatorOf<PortAudioDeviceDriver>("portaudio", 
                                                   "grabber",
                                                   "PortAudioDeviceDriver"));
#endif

    add(new DriverCreatorOf<TestFrameGrabber>("test_grabber",
                                              "grabber",
                                              "TestFrameGrabber"));

    add(new DriverCreatorOf<RemoteFrameGrabber>("remote_grabber",
                                                "grabber",
                                                "RemoteFrameGrabber"));

    add(new DriverCreatorOf<ServerFrameGrabber>("grabber",
                                                "grabber",
                                                "ServerFrameGrabber"));


    add(new DriverCreatorOf<ServerInertial>("inertial",
                                            "inertial",
                                            "ServerInertial"));
						
    add(createRemoteControlBoard());
    add(createServerControlBoard());
}


// -*- mode:C++; tab-width:4; c-basic-offset:4; indent-tabs-mode:nil -*-

#include <yarp/dev/Drivers.h>
#include <yarp/String.h>
#include <yarp/Logger.h>
#include <yarp/os/Bottle.h>

#include <ace/OS.h>

using namespace yarp;
using namespace yarp::os;
using namespace yarp::dev;



// this is an automatically configured file
#cmakedefine ENABLE_dragonfly
#cmakedefine ENABLE_esdMotionControl
#cmakedefine ENABLE_microphone
#cmakedefine ENABLE_inertiacube2
#cmakedefine ENABLE_jamescalibrator

// add header file here, cmakedefine line above (in PopulateDrivers.cpp.in),
// and factory code below
#ifdef ENABLE_dragonfly
#include <yarp/DragonflyDeviceDriver.h>
#endif

#ifdef ENABLE_esdMotionControl
#include <yarp/EsdMotionControl.h>
#endif

#ifdef ENABLE_microphone
#include <yarp/MicrophoneDeviceDriver.h>
#endif

#ifdef ENABLE_inertiacube2
#include <yarp/InertiaCube2.h>
#endif

#ifdef ENABLE_jamescalibrator
#include <yarp/dev/JamesCalibrator.h>
#endif

extern DriverCreator *createRemoteFrameGrabber();
extern DriverCreator *createServerFrameGrabber();
extern DriverCreator *createTestFrameGrabber();
extern DriverCreator *createRemoteControlBoard();
extern DriverCreator *createServerControlBoard();


void Drivers::init() {
#ifdef ENABLE_dragonfly
    add(new DriverCreatorOf<DragonflyDeviceDriver>("dragonfly","grabber"));
#endif
#ifdef ENABLE_esdMotionControl
    add(new DriverCreatorOf<EsdMotionControl>("esd","controlboard"));
#endif
#ifdef ENABLE_microphone
    add(new DriverCreatorOf<MicrophoneDeviceDriver>("microphone","grabber"));
#endif

#ifdef ENABLE_inertiacube2
    add(new DriverCreatorOf<InertiaCube2>("inertiacube2", "inertiacube2"));
#endif

#ifdef ENABLE_jamescalibrator
    add(new DriverCreatorOf<JamesCalibrator>("jamescalibrator", "jamescalibrator"));
#endif

    add(createTestFrameGrabber());
    add(createRemoteFrameGrabber());
    add(createServerFrameGrabber());
    add(createRemoteControlBoard());
    add(createServerControlBoard());
}



PROJECT(yarp-motorcontrolgui)

IF (NOT COMPILING_ALL_YARP)
  SET(YARP_DIR "$ENV{YARP_ROOT}" CACHE LOCATION "where is yarp?")
  SET(CMAKE_MODULE_PATH "$ENV{YARP_ROOT}/conf")
  INCLUDE(UsePkgConfig)
  FIND_PACKAGE(YARP REQUIRED)
  FIND_PACKAGE(GtkMM REQUIRED)
ELSE (NOT COMPILING_ALL_YARP)
  INCLUDE_DIRECTORIES(${YARP_OS_INC} ${YARP_sig_INC} ${YARP_dev_INC})
  LINK_LIBRARIES(YARP_dev ${YARP_dev_EXT_LIBS} YARP_sig YARP_OS)
ENDIF (NOT COMPILING_ALL_YARP)

ADD_DEFINITIONS(${GTKMM_C_FLAGS})
INCLUDE_DIRECTORIES(${GTKMM_INCLUDE_DIR})

FILE(GLOB folder_source *.cpp)
FILE(GLOB folder_header *.h include/*.h)
SOURCE_GROUP("Source Files" FILES ${folder_source})
SOURCE_GROUP("Header Files" FILES ${folder_header})

ADD_EXECUTABLE(yarpmotorcontrol ${folder_source} ${folder_header})
INSTALL (TARGETS yarpmotorcontrol RUNTIME DESTINATION bin)
INSTALL (FILES yarpmotorcontrol.glade DESTINATION bin)
CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/yarpmotorcontrol.glade
               ${EXECUTABLE_OUTPUT_PATH}/yarpmotorcontrol.glade 
	       @ONLY IMMEDIATE)

TARGET_LINK_LIBRARIES(yarpmotorcontrol ${GTKMM_LINK_FLAGS})

IF(MSVC)
    SET_TARGET_PROPERTIES(yarpmotorcontrol PROPERTIES COMPILE_FLAGS /wd4250)
ENDIF(MSVC)

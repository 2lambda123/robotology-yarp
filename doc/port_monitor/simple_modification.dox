
/*
 * Copyright: (C) 2011 Robotics, Brain and Cognitive Sciences - Italian Institute of Technology (IIT)
 * Copy Policy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT
 *
 */

/**
 * @page simple_modification An example which shows how to use a Lua script to modify incoming data in an input port

\author Ali Paikan

\section req Requirements
\li Enable and compile portmonitor carrier (ENABLE_yarpcar_portmonitor_carrier=ON in YARP cmake).

\li Compile Yarp with Lua binding support (see \ref yarp_swig "Using YARP from python, java, ruby, C#, and other languages").

\li Set LUA_CPATH to include Yarp-Lua binding library  (e.g., export LUA_CPATH=";;;$YARP_ROOT/build/lib/lua/?.so")


\section running Running the example

\li Open a terminal and run yarpserver
\verbatim
   $ yarpserver
\endverbatim

\li Open another terminal (lets call this the sender terminal) and type 
\verbatim
   $ yarp write /write 
\endverbatim

\li Open another terminal (lets call this the receiver terminal) )and change to the 'simple_modification' directory:
\verbatim 
   $ cd $YARP_ROOT/example/portmonitor/simple_modification
   $ yarp read /read
\endverbatim
  
\li In another terminal connect the port as follow
\verbatim 
   $ yarp connect /write /read tcp+recv.portmonitor+script.lua+file.bot_modifier
\endverbatim

Now if you write something  in the 'sender' terminal, you will see the text "modified from Lua" will be added to the original message. For example: 
\verbatim
[sender terminal]
 Hello 
\endverbatim

\verbatim 
[receiver terminal] 
 Hello "modified from Lua"
\endverbatim

As it is constrained in this PortMonitor.accept() method, If you type "ignore", the word will never be delivered to the input port. 

*/


/*
 * Copyright: (C) 2011 Robotics, Brain and Cognitive Sciences - Italian Institute of Technology (IIT)
 * Copy Policy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT
 *
 */

/**
 * @page image_modification An example which shows how to use a Lua script to modify image data

\author Ali Paikan

\section desc Description
This example demonstrates how to access the YARP image data using port monitor and modify it. It also shows how to use YARP administrative port to pass some parameters to the Lua script in the port monitor.


\section req Requirements
\li Enable and compile portmonitor carrier (ENABLE_yarpcar_portmonitor_carrier=ON in YARP cmake).

\li Compile Yarp with Lua binding support (see \ref yarp_swig "Using YARP from python, java, ruby, C#, and other languages").

\li Set LUA_CPATH to include Yarp-Lua binding library  (e.g., export LUA_CPATH=";;;$YARP_ROOT/build/lib/lua/?.so")


\section running Running the example

\li Open a terminal and run yarpserver
\verbatim
   $ yarpserver
\endverbatim

\li Open another terminal (lets call this the receiver terminal) )and change to the 'image_modification' directory and run the application using yarpmanager:
\verbatim 
   $ cd $YARP_ROOT/example/portmonitor/image_modification
   $ yarpmanager-console --application TestMonitorImage.xml
\endverbatim
  

\li run the modues and connect the ports
\verbatim 
   >> run
   >> connect
\endverbatim

You should see two instances of yarpview showing the original image from fake test grabber and the modified one using Lua script (i.e. the Lua script draws moving circular points over the original image) 

\li You can also change the foreground and background point's color using YARP port administrator. To do this, open another terminal and try the following commands:
\verbatim 
    $ yarp admin rpc /modified/yarpview/img:i
    $ set in /grabber (fg 0 255 0)      // this set the foreground color to Green (0 G 0)
    $ set in /grabber (bg 0 0 255)      // this set the foreground color to Blue (0 0 B)
    $ get in /grabber                   // will show the parameter's value 
\endverbatim


\li To stop the application, in the yarpmanager's console, type:
\verbatim
    >> stop
    >> exit
\endverbatim

*/

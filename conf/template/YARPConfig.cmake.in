# Copyright: (C) 2009 RobotCub Consortium
# Authors: Paul Fitzpatrick, Giorgio Metta
# CopyPolicy: Released under the terms of the GNU GPL v2.0.

IF (NOT YARP_FOUND)

MESSAGE(STATUS "Using YARP")

SET(YARP_LIBRARIES "@YARP_LIBRARIES@" CACHE INTERNAL "Libraries needed for YARP")
SET(YARP_INCLUDES "@YARP_INCLUDES@" CACHE INTERNAL "Include directories needed for YARP")
SET(YARP_DEFINES "@YARP_DEFINES@" CACHE INTERNAL "Definitions needed for YARP")
#MESSAGE(STATUS "**** YARP_LIBRARIES: ${YARP_LIBRARIES}")

# Pull in any dependencies that YARP libraries have
INCLUDE("@CMAKE_BINARY_DIR@/YARPDependencies.cmake")

SET(CREATE_DEVICE_LIBRARY_MODULES @CREATE_DEVICE_LIBRARY_MODULES@)
SET(MERGE_DEVICE_LIBRARY_MODULES @MERGE_DEVICE_LIBRARY_MODULES@)

LINK_LIBRARIES(${YARP_LIBRARIES})
INCLUDE_DIRECTORIES(${YARP_INCLUDES})
ADD_DEFINITIONS(${YARP_DEFINES})

# pick up YARP's helper modules
SET(YARP_MODULE_PATH "@CMAKE_MODULE_PATH@")
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH};${YARP_MODULE_PATH})

# make some useful YARP macros available
IF (EXISTS ${YARP_MODULE_PATH}/YarpDevice.cmake)
  INCLUDE(YarpDevice)
ENDIF (EXISTS ${YARP_MODULE_PATH}/YarpDevice.cmake)

# pass along some flags that may be useful.
SET(YARP_HAS_MATH_LIB @YARP_HAS_MATH_LIB@)
SET(YARP_USE_ATLAS @YARP_USE_ATLAS@)

SET (YARP_FOUND TRUE)
ENDIF (NOT YARP_FOUND)

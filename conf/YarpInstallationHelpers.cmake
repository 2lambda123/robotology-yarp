# Copyright: (C) 2013 Istituto Italiano di Tecnologia
# Authors: Elena Ceseracciu, Daniele Domenichelli
# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT

include(CMakeParseArguments)
macro(YARP_CONFIGURE_EXTERNAL_INSTALLATION _name)
  if (YARP_INSTALL_PREFIX) #if YARP is installed

    get_filename_component(yarp_prefix "${YARP_INSTALL_PREFIX}" ABSOLUTE)
    get_filename_component(current_prefix "${CMAKE_INSTALL_PREFIX}" ABSOLUTE)
    string(COMPARE EQUAL ${yarp_prefix}  ${current_prefix} same_path)
    
    if (same_path)
      set(BUFFER "###### This file is automatically generated by CMake.\n")
      set(BUFFER "${BUFFER}[search ${_name}]\n")
      set(BUFFER "${BUFFER}path \"${CMAKE_INSTALL_PREFIX}/share/${_name}\"")
      file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/path.d/${_name}.ini "${BUFFER}") #Create _name.ini file inside build directory
      install(FILES ${CMAKE_CURRENT_BINARY_DIR}/path.d/${_name}.ini DESTINATION ${YARP_INSTALL_PREFIX}/share/yarp/config/path.d) #Install the file into yarp config dir
      message(STATUS "Setting up installation of ${_name}.ini to ${YARP_INSTALL_PREFIX}/share/yarp/config/path.d folder.")
    else()
      message(WARNING "Installation prefix is different from YARP's : no file will we be installed into path.d folder, you need to set YARP_DATA_DIRS environment variable to ${CMAKE_INSTALL_PREFIX}/share/${_name}")
    endif()

  endif()

  string(TOUPPER ${_name} _NAME)
  # (uppercase _name -> _NAME)
  # Generate and set variables
  set(${_NAME}_DATA_INSTALL_DIR share/${_name} CACHE INTERNAL "general data installation directory for ${_name} (relative to build/installation dir")
  set(${_NAME}_CONFIG_INSTALL_DIR share/${_name}/config CACHE INTERNAL "configuration files installation directory for ${_name} (relative to build/installation dir")
  set(${_NAME}_PLUGIN_MANIFESTS_INSTALL_DIR ${${_NAME}_DATA_INSTALL_DIR}/plugins CACHE INTERNAL "plugin manifests installation directory for ${_name} (relative to build/installation dir")
  set(${_NAME}_MODULES_INSTALL_DIR ${${_NAME}_DATA_INSTALL_DIR}/modules CACHE INTERNAL "modules' XML descriptions installation directory for ${_name} (relative to build/installation dir")
  set(${_NAME}_APPLICATIONS_INSTALL_DIR ${${_NAME}_DATA_INSTALL_DIR}/applications CACHE INTERNAL "applications' XML descriptions installation directory for ${_name} (relative to build/installation dir")
  set(${_NAME}_TEMPLATES_INSTALL_DIR ${${_NAME}_DATA_INSTALL_DIR}/templates CACHE INTERNAL "general templates installation directory for ${_name} (relative to build/installation dir")
  set(${_NAME}_CONTEXTS_INSTALL_DIR ${${_NAME}_DATA_INSTALL_DIR}/contexts CACHE INTERNAL "contexts installation directory for ${_name} (relative to build/installation dir")
  set(${_NAME}_APPLICATIONS_TEMPLATES_INSTALL_DIR ${${_NAME}_DATA_INSTALL_DIR}/templates/applications CACHE INTERNAL "application templates' installation directory for ${_name} (relative to build/installation dir")
  set(${_NAME}_MODULES_TEMPLATES_INSTALL_DIR ${${_NAME}_DATA_INSTALL_DIR}/templates/modules CACHE INTERNAL "module templates' installation directory for ${_name} (relative to build/installation dir")
endmacro()

macro(YARP_INSTALL)
#CMakeParseArguments.cmake
   CMAKE_PARSE_ARGUMENTS(currentTarget "" "DESTINATION" "FILES" ${ARGN})
   install(${ARGN})
   file(COPY ${currentTarget_FILES} DESTINATION ${CMAKE_BINARY_DIR}/${currentTarget_DESTINATION})
endmacro()


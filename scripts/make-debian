#!/bin/sh

# This script makes a debian package
# call from root as ./scripts/make-debian


# sudo apt-get install pbuilder debarchiver debhelper fakeroot


# how to create pbuilder environments
#sudo pbuilder create --basetgz /var/cache/pbuilder/base-stable.tgz --distribution stable
#sudo pbuilder create --basetgz /var/cache/pbuilder/base-unstable.tgz --distribution unstable



ORG=$PWD
SRC=$PWD/source-package
BASE=$PWD/debian-package

echo "Make sure you run ./scripts/make-source-package first"

for f in `ls $SRC/*.tar.gz`; do
    echo Working with $f
    rm -rf $BASE
    mkdir -p $BASE
    cd $BASE
    tar xzf - < $f
    dir=`basename $f .tar.gz`
    ver=`echo $dir | sed s/.*-//g`
    echo "Version number is $ver"
    if [ -e $dir ]; then
	echo Working in $dir
	cd $dir
	YARP=$PWD
	log=$PWD/debian/changelog
	# propagate version number
	cp $log tmp.x
	cat tmp.x | sed "s/2\.[0-9]\.[0-9]/$ver/g" | tee $log
	rm tmp.x
	cd ..
	mv $YARP original
	cd original
	ORIG=$PWD
	echo Packaging...
	dists="stable unstable"
	if which pdebuild; then
	    for d in $dists; do
		rm -rf $YARP
		cp -R $ORIG $YARP
		cd $YARP
		log=$PWD/debian/changelog
		cp $log tmp.x
		cat tmp.x | sed "s/unstable/$d/g" | tee $log
		rm tmp.x
		mkdir -p ../$d
		pdebuild --buildresult ../$d -- --basetgz /var/cache/pbuilder/base-$d.tgz --distribution $d
		cd ../$d
		for c in `ls *.changes`; do
		    mkdir -p $BASE/archive
		    mkdir copy
		    cp * copy
		    cd copy
		    debarchiver -d $BASE/archive -i $PWD -o -a
		    cd ..
		    rm -rf copy
		done
	    done
	else
	    # just give a taste of packaging process
	    dpkg-buildpackage -us -uc -d -rfakeroot	
	fi
	echo "Results in $BASE/archive"
    fi
done



#cd $BASE
#pbuilder build $BASE/*.dsc


